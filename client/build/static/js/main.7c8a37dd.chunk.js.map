{"version":3,"sources":["utils/API/apis sync nonrecursive //.[jt]sx?$","utils/API/apis/All.ts","utils/API/apis/Auth.ts","utils/API/index.ts","utils/http/history.ts","store/Auth/index.tsx","utils/http/index.ts","modules/Login/index.tsx","modules/NotFound/index.tsx","components/Content/index.tsx","modules/Home/index.tsx","components/Modal/index.tsx","modules/Book/AddModal.tsx","modules/Book/index.tsx","modules/Book/Detail.tsx","modules/Author/AddModal.tsx","modules/Author/index.tsx","modules/Author/Detail.tsx","modules/Genre/AddModal.tsx","modules/Genre/index.tsx","modules/Genre/Detail.tsx","modules/Bookinstance/AddModal.tsx","modules/Bookinstance/index.tsx","config.tsx","modules/Bookinstance/Detail.tsx","components/Header/index.tsx","App.tsx","_App.tsx","serviceWorker.js","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HOST","API","home","getList","book","create","delete","update","detail","list","author","genre","bookinstance","login","isDev","process","apiCtx","require","reduce","file","path","basename","extname","config","host","createAPI","apis","result","key","pathname","args","index","replace","match","arg","undefined","enhanced","createBrowserHistory","forceRefresh","initialState","isAuthenticated","user","token","localStorage","getItem","reducer","state","action","type","setItem","JSON","stringify","payload","clear","history","push","AuthContext","React","createContext","axios","dataSerializer","params","qs","arrayFormat","allowDots","interceptors","request","use","timeout","useJson","method","headers","transformRequest","noToken","Authorization","response","data","console","info","success","error","status","removeItem","location","Form","name","props","form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","dispatch","useContext","fieldsError","usernameError","passwordError","className","Item","validateStatus","help","rules","required","message","prefix","style","color","placeholder","onClick","validateFields","err","values","a","http","post","Auth","resp","username","width","htmlType","disabled","some","field","NotFound","Content","Layout","withRouter","nav","routes","find","route","isRightRoutes","navTitle","title","to","children","apiGetList","Promise","reject","get","All","then","catch","Home","useAsync","loading","value","spinning","book_count","book_instance_count","book_instance_available_count","author_count","genre_count","Modal","defaultSettings","destroyOnClose","footer","maskClosable","closable","open","destroyed","withResolve","withReject","settings","onOk","ev","close","dismiss","onCancel","div","document","createElement","destroy","unmountComponentAtNode","body","removeChild","render","reason","visible","callback","TheComponent","component","childProps","reactRender","afterClose","Children","child","cloneElement","appendChild","Option","Select","apiGetAuthors","options","author_list","authorItem","label","family_name","first_name","_id","apiGetGenres","genre_list","apiGetCache","all","apiGetBook","bookData","genreItem","cacheState","bookState","isSetForm","useRef","useEffect","current","setFieldsValue","authorOptions","genreGroups","optionItem","TextArea","Group","justify","marginLeft","bookList","book_list","bookItem","authorName","columns","dataIndex","align","Book","useAsyncRetry","retry","handleDelete","record","AddModal","marginBottom","bordered","rowKey","col","text","handleUpdate","dataSource","BookDetail","instancesData","book_instances","onBack","goBack","column","summary","isbn","length","instanceItem","instanceIndex","marginTop","due_back","imprint","authorState","date_of_birth","moment","date_of_death","birth","format","death","Author","AuthorDetail","authorData","author_books","bookIndex","genreState","Genre","GenreDetail","genreData","genre_books","statusOptions","apiGetBookList","bookOptions","bookInstanceState","instanceList","bookinstance_list","bookinstanceItem","dueBack","bookTitle","routeCfg","exact","inMenu","Header","Footer","theme","mode","selectedKeys","filter","overlay","href","icon","Entry","useReducer","Provider","App","Login","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c8a37dd.chunk.js","sourcesContent":["var map = {\n\t\"./All.ts\": 232,\n\t\"./Auth.ts\": 233\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 231;","export const HOST = [\"http://localhost:5001/api\", \"http://api.jokingzhang.com/demo-library/api\"];\n\nexport const API = {\n  home: {\n    getList: \"/home\"\n  },\n  book: {\n    create: \"/book/create\",\n    delete: \"/book/:id/delete\",\n    update: \"/book/:id/update\",\n    detail: \"/book/:id\",\n    list: \"/books\"\n  },\n  author: {\n    create: \"/author/create\",\n    delete: \"/author/:id/delete\",\n    update: \"/author/:id/update\",\n    detail: \"/author/:id\",\n    list: \"/authors\"\n  },\n  genre: {\n    create: \"/genre/create\",\n    delete: \"/genre/:id/delete\",\n    update: \"/genre/:id/update\",\n    detail: \"/genre/:id\",\n    list: \"/genres\"\n  },\n  bookinstance: {\n    create: \"/bookinstance/create\",\n    delete: \"/bookinstance/:id/delete\",\n    update: \"/bookinstance/:id/update\",\n    detail: \"/bookinstance/:id\",\n    list: \"/bookinstances\"\n  }\n};\n","export const HOST = [\"http://localhost:5001/auth\", \"http://api.jokingzhang.com/demo-library/auth\"];\n\nexport const API = {\n  login: \"/login\"\n};\n","import path from \"path\";\n\n// 导入接口定义\nimport { API as All } from \"./apis/All\";\nimport { API as Auth } from \"./apis/Auth\";\n\ntype API<T> = { [P in keyof T]: T[P] extends object ? API<T[P]> : (...args: Array<string | number>) => string };\n\ninterface IAPI {\n  // 这里需要传递接口结构声明\n  All: typeof All;\n  Auth: typeof Auth;\n}\n\nconst isDev = process.env.NODE_ENV === \"development\";\n// @ts-ignore\nconst apiCtx = require.context(\"./apis\", false, /\\.[jt]sx?$/);\n\nexport default apiCtx.keys().reduce((exports, file) => {\n  exports[path.basename(file, path.extname(file))] = enhanced(apiCtx(file));\n\n  return exports;\n}, {}) as API<\n  IAPI & {\n    [key: string]: any;\n  }\n>;\n\nfunction enhanced(config) {\n  const host = isDev ? config.HOST[0] : config.HOST[1];\n  const createAPI = apis =>\n    Object.keys(apis).reduce((result, key) => {\n      const pathname = apis[key];\n\n      result[key] =\n        typeof pathname === \"string\"\n          ? (...args) => {\n              let index = 0;\n\n              return (\n                host +\n                pathname.replace(/:[^/]+/gi, match => {\n                  const arg = args[index++];\n\n                  return arg === undefined ? match : arg;\n                })\n              );\n            }\n          : createAPI(pathname);\n\n      return result;\n    }, {});\n\n  return createAPI(config.API);\n}\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory({ forceRefresh: true });\n","import React from \"react\";\nimport history from \"../../utils/http/history\";\n\nexport const initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null\n} as any;\n\nconst token = localStorage.getItem(\"token\");\nconst user = localStorage.getItem(\"user\");\n\nif (token) {\n  initialState.isAuthenticated = true;\n  initialState.token = token;\n}\n\nif (user) {\n  initialState.user = user;\n}\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\n      localStorage.setItem(\"token\", JSON.stringify(action.payload.token));\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n    case \"LOGOUT\":\n      localStorage.clear();\n      history.push(\"/login\");\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthContext = React.createContext(initialState);\n","// 文档查看：https://github.com/mzabriskie/axios\nimport axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from \"axios\";\nimport { Router } from \"react-router-dom\";\nimport { Modal } from \"antd\";\n// import cookies from 'utils/cookie';\nimport history from \"./history\";\nimport qs from \"qs\";\nimport { message as AntdMessage } from \"antd\";\n// import * as constants from 'config/constant';\n\ndeclare module \"axios\" {\n  // tslint:disable-next-line\n  interface AxiosRequestConfig {\n    useJson?: boolean;\n    noToken?: boolean;\n    verifytoken?: boolean;\n    // 默认支持token过期提醒，如果不需要该功能，则传false值\n    expiredWarning?: boolean;\n  }\n\n  // tslint:disable-next-line\n  interface AxiosResponse {\n    [key: string]: any;\n  }\n}\n\nexport default axios;\n\ntype ErrorCode = number | string;\ntype ErrorMsg = string;\ninterface IError extends Error {\n  error_code: ErrorCode;\n  error_msg: ErrorMsg;\n  response: AxiosResponse;\n}\n\ninterface IData {\n  error_msg?: ErrorMsg;\n  error_description?: ErrorMsg;\n  error_message?: ErrorMsg;\n  message?: ErrorMsg;\n  description?: ErrorMsg;\n  msg?: ErrorMsg;\n\n  error_code?: ErrorCode;\n  code?: ErrorCode;\n}\n\nconst ERROR_MSG = {\n  /* 网络类异常 */\n  OFF_LINE: \"抱歉，您貌似还没连接到网络，请检查网络连接\",\n  CANCEL: \"抱歉，请求已取消\",\n  200: \"抱歉，请求失败\",\n  401: \"抱歉，您貌似还没有登录\",\n  403: \"抱歉，您没有权限访问该页面\",\n  413: \"抱歉，您上传文件太大\",\n\n  404: \"抱歉，您访问的接口地址貌似不存在\",\n  500: \"抱歉，当前服务器异常，请稍后再试\",\n  503: \"抱歉，当前服务器异常，请稍后再试\"\n};\n\nexport function dataSerializer(params: object) {\n  return qs.stringify(params, {\n    arrayFormat: \"indices\",\n    allowDots: true\n  });\n}\n\naxios.interceptors.request.use((config: AxiosRequestConfig) => {\n  if (!config.timeout) {\n    config.timeout = 60 * 1000;\n  }\n\n  // 增加对表单数组提交的支持\n  if (!config.useJson && (config.method === \"post\" || config.method === \"put\")) {\n    config.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    config.transformRequest = dataSerializer;\n  }\n\n  // 请求添加token头\n  if (!config.noToken) {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n\n  return config;\n});\n\naxios.interceptors.response.use(\n  (response: AxiosResponse) => {\n    let data = response.data;\n    console.info(response);\n\n    if (data && typeof data === \"object\") {\n      if (data.success === \"true\") {\n        return data;\n      }\n    }\n\n    return response;\n  },\n  error => {\n    console.info(error);\n    if (error.response.status === 401) {\n      //place your reentry code\n\n      localStorage.removeItem(\"token\");\n      if (history.location.pathname !== \"/login\") {\n        history.push(\"/login\");\n      }\n      //   return new Promise((resolve, reject) => {\n      //     Modal.confirm({\n      //       title: \"您的登录已失效\",\n      //       content: \"是否立即去登录？\",\n      //       okText: \"去登录\",\n      //       cancelText: \"取消\",\n      //       onOk(close) {\n      //         close();\n      //         history.push(\"/login\");\n      //       },\n      //       onCancel(close) {\n      //         close();\n      //         reject(error);\n      //       }\n      //     });\n      //   });\n    }\n    return error;\n  }\n);\n","import React, { FC, useContext } from \"react\";\nimport { useAsync } from \"react-use\";\nimport { Spin, message, Form, Input, Icon, Button } from \"antd\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { AuthContext } from \"../../store/Auth\";\nimport http from \"../../utils/http\";\nimport { FormComponentProps } from \"antd/lib/form\";\nimport \"./style.scss\";\n\ninterface IProps extends FormComponentProps {\n  className?: string;\n}\n\n// const apiGetList = () =>\n//   new Promise((resolve, reject) => {\n//     http\n//       .get(API.Auth.login())\n//       .then(resp => {\n//         resolve(resp.data);\n//       })\n//       .catch(error => {\n//         message.error(error.message);\n//         reject(error.message);\n//       });\n//   });\n\nconst Login = (props: IProps & RouteComponentProps) => {\n  // const {loading, value, error} = useAsync < any > (apiGetList);\n  const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = props.form;\n  const { dispatch } = React.useContext(AuthContext);\n\n  const handleSubmit = () => {\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        try {\n          const resp = await http.post(API.Auth.login(), values, { useJson: true });\n          message.success(\"登录成功\");\n          dispatch({\n            type: \"LOGIN\",\n            payload: {\n              user: values.username,\n              token: resp.data.token\n            }\n          });\n          props.history.push(\"/\");\n        } catch (err) {\n          message.error(err.message);\n        }\n      }\n    });\n  };\n\n  function hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n  }\n\n  const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n  const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n\n  return (\n    <div className=\"p-login\">\n      <h1> MDN 本地图书馆网站 </h1>\n      <Form className=\"p-login-form\">\n        <Form.Item validateStatus={usernameError ? \"error\" : \"\"} help={usernameError || \"\"}>\n          {getFieldDecorator(\"username\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(<Input prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />} placeholder=\"Username\" />)}\n        </Form.Item>\n        <Form.Item validateStatus={passwordError ? \"error\" : \"\"} help={passwordError || \"\"}>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            onClick={handleSubmit}\n            style={{ width: \"100%\" }}\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={hasErrors(getFieldsError())}\n          >\n            登录\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Form.create({ name: \"login\" })(Login);\n","import React, {FC} from 'react';\n\ninterface IProps {\n    className?: string;\n}\n\nconst NotFound: FC<IProps> = props => {\n    return (\n        <div>\n            NotFound\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport {NavLink, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {Layout, Breadcrumb} from 'antd';\nimport {IRouteCfgProps} from '../../config';\nimport './style.scss';\n\nconst {Content} = Layout\n\ninterface ILayoutContentProps extends RouteComponentProps {\n    children : React.ReactChild;\n    routes : IRouteCfgProps[];\n}\n\nconst LayoutContent = (props : ILayoutContentProps) => {\n\n    const nav = props\n        .routes\n        .find((route) => {\n            return props.location.pathname === route.path;\n        })\n    const isRightRoutes = !!nav;\n\n    const navTitle = nav ? nav.title : '';\n\n    return (\n        <Content className=\"c-content\">\n            {isRightRoutes && \n                (<Breadcrumb className=\"c-content-breadcrumb\">\n                    <Breadcrumb.Item>\n                        <NavLink to=\"/\">首页</NavLink>\n                    </Breadcrumb.Item>\n                    {props.location.pathname !== '/' && \n                        <Breadcrumb.Item>\n                            <NavLink to={props.location.pathname}>{navTitle}</NavLink>\n                        </Breadcrumb.Item>\n                    }\n                </Breadcrumb>)\n            }\n            {props.children}\n        </Content>\n    )\n}\n\nexport default withRouter(LayoutContent);","import React, {FC} from 'react';\nimport {useAsync} from 'react-use';\nimport {Spin, message} from 'antd';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.home.getList())\n        .then(resp => {\n            resolve(resp.data);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst Home: FC <IProps> = props => {\n    const {loading, value, error} = useAsync < any > (apiGetList);\n\n    return (\n        <div>\n            <h1>图书馆首页</h1>\n            <p>欢迎来到图书馆！</p>\n            <h2>动态信息</h2>\n            <Spin spinning={loading}>\n                {value && <ul>\n                    <li>\n                        <b>图书：</b>\n                        {value.book_count}\n                    </li>\n                    <li>\n                        <b>图书实例：</b>\n                        {value.book_instance_count}\n                    </li>\n                    <li>\n                        <b>可借阅图书实例：</b>\n                        {value.book_instance_available_count}\n                    </li>\n                    <li>\n                        <b>作者：</b>\n                        {value.author_count}\n                    </li>\n                    <li>\n                        <b>图书分类：</b>\n                        {value.genre_count}\n                    </li>\n                </ul>\n}\n            </Spin>\n        </div>\n    )\n}\n\nexport default Home;","/* tslint:disable */\nimport React, { Children, cloneElement } from 'react';\nimport { render as reactRender, unmountComponentAtNode } from 'react-dom';\nimport Modal, { ModalProps } from 'antd/lib/modal';\nimport './style.scss';\n\nexport default Modal as INewModal;\n\ntype INewModal = typeof Modal & {\n    open: (\n        config: IConfig\n    ) => IHandler & {\n        result: Promise<any>;\n    };\n};\n\ninterface IHandler {\n    close(data: any): void;\n    dismiss(reason: any): void;\n}\n\ninterface IConfig extends Omit<ModalProps, 'onOk' | 'onCancel'> {\n    onOk?(e: React.MouseEvent<any>, handler: IHandler): void;\n    onCancel?(e: React.MouseEvent<any>, handler: IHandler): void;\n    component?: React.ComponentType | React.ReactElement<any>;\n}\n\nconst defaultSettings = {\n    destroyOnClose: true,\n    footer: null,\n    maskClosable: false,\n    closable: false\n};\n\n/**\n * @desc 给antd的Modal扩展一个open方法，用来方便的创建更灵活的modal。\n *       默认的Modal组件依赖于组件声明式受控调用，非常麻烦，尤其是需要从组件内部关闭modal时，需要将关闭句柄向下传递；\n *       并且对于多modal场景下，使用也非常麻烦，需要定义多个状态值对应到不同的modal的visible状态！\n *\n *       新增的Modal.open方法，通过封装隐藏了visible控制，通过对外暴漏以及向下传递close、dismiss句柄以及promise，可以方便的用来从外部、组件内部关闭modal，\n *       并且可以方便的通过promise来处理modal关闭的回调！\n *\n * @usage Modal.open({ component: YourComponent / <YourComponent />, ...ModalProps  })\n *\n *        component参数支持传入组件定义，或者直接传入该组件调用的reactNode。\n *        无论哪种方式，Modal.open都会向其传递close、dismiss属性。\n *        在YourComponent组件内部，你可以方便的通过这两种方法来关闭modal。\n *\n *        close、dismiss两个方法都可以用来关闭modal，不同的是他们对于返回的promise的状态有影响：\n *        close => Promise.resolved\n *        dismiss => Promise.rejected\n *\n * @param {Object} config 配置参数，支持Modal的所有的props参数，另外新增扩展了component参数，具体使用参考上方说明!\n *\n * @return {Object} { close, dismiss, result: Promise }\n *          返回一个对象，包含了close、dismiss两个关闭方法，以及一个result的promise对象，可以通过该promise来访问modal关闭时的回调！\n */\nexport const open = ((Modal as INewModal).open = (props: IConfig = {}) => {\n    let destroyed : any;\n    let withResolve : any;\n    let withReject : any;\n\n    const settings = { ...defaultSettings, ...props };\n\n    if (settings.footer === true) {\n        delete settings.footer;\n    }\n\n    if (props.onOk) {\n        settings.onOk = ev => props.onOk!(ev, { close, dismiss });\n    }\n\n    if (props.onCancel) {\n        settings.onCancel = ev => props.onCancel!(ev, { close, dismiss });\n    }\n\n    const div = document.createElement('div');\n\n    document.body.appendChild(div);\n\n    function destroy() {\n        if (!destroyed) {\n            destroyed = true;\n\n            unmountComponentAtNode(div);\n\n            document.body.removeChild(div);\n        }\n    }\n\n    function close(data : any) {\n        render(false, () => withResolve(data));\n    }\n\n    function dismiss(reason : any) {\n        render(false, () => withReject(reason));\n    }\n\n    function render(visible : boolean, callback?: () => void) {\n        const { component: TheComponent, ...props } = settings;\n        const childProps = {\n            close,\n            dismiss\n        };\n\n        let children;\n\n        if (typeof TheComponent === 'function') {\n            children = <TheComponent />;\n        } else {\n            children = TheComponent;\n        }\n\n        reactRender(\n            // @ts-ignore\n            <Modal\n                // @ts-ignore\n                onCancel={dismiss}\n                // @ts-ignore\n                onOk={close}\n                {...props}\n                visible={visible}\n                afterClose={() => {\n                    if (!callback) {\n                        callback = withReject;\n                    }\n\n                    callback!();\n                    destroy();\n                }}>\n                {Children.map(children, child => cloneElement(child as React.ReactElement<any>, childProps))}\n            </Modal>,\n            div\n        );\n    }\n\n    render(true);\n\n    return {\n        close,\n        dismiss,\n        result: new Promise((resolve, reject) => {\n            withResolve = resolve;\n            withReject = reject;\n        })\n    };\n});\n","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport {\n    Spin,\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    Select,\n    Checkbox\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\nconst {Option} = Select;\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetAuthors = new Promise((resolve, reject) => {\n    http\n        .get(API.All.author.list())\n        .then(resp => {\n\n            const options = resp.data.author_list\n                ? resp\n                    .data\n                    .author_list\n                    .map((authorItem) => {\n                        return {label: `${authorItem.family_name}，${authorItem.first_name}`, value: authorItem._id}\n                    })\n                : [];\n\n            resolve(options);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n})\n\nconst apiGetGenres = new Promise((resolve, reject) => {\n    http\n        .get(API.All.genre.list())\n        .then(resp => {\n            resolve(resp.data.genre_list || []);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n})\n\nconst apiGetCache = () => Promise.all([apiGetAuthors, apiGetGenres]);\n\nconst apiGetBook = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.detail(id))\n            .then(resp => {\n                const bookData = {\n                    ...resp.data.book,\n                    author: resp.data.book.author._id,\n                    genre: resp.data.book.genre.map((genreItem) => {\n                        return genreItem._id\n                    })\n                }\n                resolve(bookData);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\nconst BookModal = (props : IProps) => {\n    const cacheState = useAsync<any>(apiGetCache);\n    const bookState = useAsync<any>(() => apiGetBook(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props.form.setFieldsValue(bookState.value);\n    }, [!isSetForm.current, !!bookState.value])\n\n    const authorOptions = cacheState.value\n        ? cacheState.value[0]\n        : [];\n    const genreGroups = cacheState.value\n        ? cacheState.value[1]\n        : [];\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async (err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.book.update(props.id), values, {\n                                useJson: true\n                            });\n    \n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.book.create(), values, {\n                                useJson: true\n                            });\n    \n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Spin spinning={cacheState.loading}>\n                <Form>\n                    <Form.Item label=\"标题\">\n                        {props\n                            .form\n                            .getFieldDecorator('title', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入标题'\n                                    }\n                                ]\n                            })(<Input/>)}\n                    </Form.Item>\n                    <Form.Item label=\"作者\">\n                        {props\n                            .form\n                            .getFieldDecorator('author', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请选择作者'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择作者\">\n                                    {authorOptions.map((optionItem) => {\n                                        return (\n                                            <Option value={optionItem.value}>\n                                                {optionItem.label}\n                                            </Option>\n                                        )\n                                    })\n}\n                                </Select>\n                            )}\n                    </Form.Item>\n                    <Form.Item label=\"简介\">\n                        {props\n                            .form\n                            .getFieldDecorator('summary', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入简介'\n                                    }\n                                ]\n                            })(<Input.TextArea/>)}\n                    </Form.Item>\n                    <Form.Item label=\"ISBN\">\n                        {props\n                            .form\n                            .getFieldDecorator('isbn', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入ISBN'\n                                    }\n                                ]\n                            })(<Input/>)}\n                    </Form.Item>\n                    <Form.Item label=\"分类\">\n                        {props\n                            .form\n                            .getFieldDecorator('genre', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入分类'\n                                    }\n                                ]\n                            })(\n                                <Checkbox.Group>\n                                    {genreGroups.map((genreItem) => {\n                                        return (\n                                            <Checkbox value={genreItem._id}>\n                                                {genreItem.name}\n                                            </Checkbox>\n                                        )\n                                    })\n}\n                                </Checkbox.Group>\n                            )}\n                    </Form.Item>\n                    <Row type=\"flex\" justify=\"end\">\n                        <Col>\n                            <Button type=\"danger\" onClick={() => props.dismiss()}>\n                                取消\n                            </Button>\n                        </Col>\n                        <Col\n                            style={{\n                            marginLeft: '12px'\n                        }}>\n                            <Button type=\"primary\" onClick={handleSubmit}>\n                                确认\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'book'})(BookModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.book.list())\n        .then(resp => {\n\n            const bookList = resp.data.book_list && resp.data.book_list.map((bookItem) => {\n                return {\n                    ...bookItem,\n                    authorName: `${bookItem.author.family_name}，${bookItem.author.first_name}`\n                }\n            })\n\n            resolve(bookList);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '书名',\n    dataIndex: 'title',\n    key: 'title'\n},{\n    title: '作者',\n    dataIndex: 'authorName',\n    key: 'authorName'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Book: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.book.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有图书实例');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'title') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/book/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n\n    return (\n        <div>\n            <h1> 图书列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加图书\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Book;","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetBook = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst BookDetail : FC < IProps > = props => {\n\n    const bookState = useAsync < any > (() => apiGetBook(props.match.params.id));\n\n    const bookData = bookState.value\n        ? bookState.value.book\n        : null;\n    const instancesData = bookState.value\n        ? bookState.value.book_instances\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"图书详情\"/>\n            <Card loading={bookState.loading}>\n                {bookData && <Descriptions column={1} title={bookData.title}>\n                    <Descriptions.Item label=\"作者\">{`${bookData.author.family_name}，${bookData.author.first_name}`}</Descriptions.Item>\n                    <Descriptions.Item label=\"简介\">{bookData.summary}</Descriptions.Item>\n                    <Descriptions.Item label=\"ISBN\">{bookData.isbn}</Descriptions.Item>\n                    <Descriptions.Item label=\"分类\">\n                        {bookData.genre && bookData\n                            .genre\n                            .map((genreItem) => {\n                                return <Link to={`/genre/${genreItem._id}`}>{genreItem.name}</Link>\n                            })\n                        }\n                    </Descriptions.Item>\n                </Descriptions>}\n\n                {instancesData.length > 0 && <hr />}\n\n                {instancesData && instancesData.map((instanceItem, instanceIndex) => {\n                    return (\n                        <Card style={{\n                            marginTop: 20\n                        }} type=\"inner\" title={`实例：${instanceIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"状态\">{instanceItem.status}</Descriptions.Item>\n                                <Descriptions.Item label=\"归还日期\">{instanceItem.due_back}</Descriptions.Item>\n                                <Descriptions.Item label=\"出版信息\">{instanceItem.imprint}</Descriptions.Item>\n                                <Descriptions.Item label=\"ID\"><Link to={`/bookinstance/${instanceItem._id}`}> {instanceItem._id} </Link></Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n\n            </Card>\n        </div>\n    )\n}\n\nexport default BookDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport moment from 'moment';\nimport {\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    DatePicker\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetAuthor = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.author.detail(id))\n            .then(resp => {\n                resolve({\n                    first_name: resp.data.author.first_name,\n                    family_name: resp.data.author.family_name,\n                    date_of_birth: moment(resp.data.author.date_of_birth),\n                    date_of_death: moment(resp.data.author.date_of_death),\n                });\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst AuthorModal = (props : IProps) => {\n    const authorState = useAsync < any > (() => apiGetAuthor(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props\n            .form\n            .setFieldsValue(authorState.value);\n    }, [\n        !isSetForm.current,\n        !!authorState.value\n    ])\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async(err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.author.update(props.id), values, {useJson: true});\n\n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.author.create(), values, {useJson: true});\n\n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Form>\n                <Form.Item label=\"姓的拼音\">\n                    {props\n                        .form\n                        .getFieldDecorator('first_name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入姓的拼音'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"姓的拼音\">\n                    {props\n                        .form\n                        .getFieldDecorator('family_name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入姓的拼音'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"出生日期\">\n                    {props\n                        .form\n                        .getFieldDecorator('date_of_birth', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入出生日期'\n                                }\n                            ]\n                        })(<DatePicker/>)}\n                </Form.Item>\n                <Form.Item label=\"死亡日期\">\n                    {props\n                        .form\n                        .getFieldDecorator('date_of_death', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入死亡日期'\n                                }\n                            ]\n                        })(<DatePicker/>)}\n                </Form.Item>\n                <Row type=\"flex\" justify=\"end\">\n                    <Col>\n                        <Button type=\"danger\" onClick={() => props.dismiss()}>\n                            取消\n                        </Button>\n                    </Col>\n                    <Col style={{\n                        marginLeft: '12px'\n                    }}>\n                        <Button type=\"primary\" onClick={handleSubmit}>\n                            确认\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'author'})(AuthorModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport moment from 'moment';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.author.list())\n        .then(resp => {\n\n            const bookList = resp.data.author_list && resp.data.author_list.map((authorItem) => {\n                return {\n                    ...authorItem,\n                    authorName: `${authorItem.family_name}，${authorItem.first_name}`,\n                    birth: moment(authorItem.date_of_birth).format('YYYY-MM-DD'),\n                    death: moment(authorItem.date_of_death).format('YYYY-MM-DD'),\n                }\n            })\n\n            resolve(bookList);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '作者名称',\n    dataIndex: 'authorName',\n    key: 'authorName'\n},{\n    title: '出生日期',\n    dataIndex: 'birth',\n    key: 'birth'\n},{\n    title: '死亡日期',\n    dataIndex: 'death',\n    key: 'death'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Author: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.author.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有作者有关的书籍');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'authorName') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/author/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n\n    return (\n        <div>\n            <h1> 作者列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加作者\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Author;","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport moment from 'moment';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetAuthor = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.author.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst AuthorDetail : FC < IProps > = props => {\n    const authorState = useAsync < any > (() => apiGetAuthor(props.match.params.id));\n\n    const authorData = authorState.value\n        ? authorState.value.author\n        : null;\n    const bookData = authorState.value\n        ? authorState.value.author_books\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"作者详情\"/>\n            <Card loading={authorState.loading}>\n                {authorData && <Descriptions column={1} title={bookData.title}>\n                    <Descriptions.Item label=\"姓名\">{`${authorData.family_name}，${authorData.first_name}`}</Descriptions.Item>\n                    <Descriptions.Item label=\"出生日期\">{moment(authorData.date_of_birth).format('YYYY-MM-DD')}</Descriptions.Item>\n                    <Descriptions.Item label=\"死亡日期\">{moment(authorData.date_of_death).format('YYYY-MM-DD')}</Descriptions.Item>\n                </Descriptions>}\n\n                <hr/> \n                \n                {bookData && bookData.map((bookItem, bookIndex) => {\n                    return (\n                        <Card\n                            style={{\n                            marginTop: 20\n                        }}\n                            type=\"inner\"\n                            title={`图书：${bookIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"标题\">\n                                    <Link to={`/book/${bookItem._id}`}>{bookItem.title}</Link>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"简介\">{bookItem.summary}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n                {bookData.length === 0 && <div>暂无图书</div>}\n\n            </Card>\n        </div>\n    )\n}\n\nexport default AuthorDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport {\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetGenre = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.genre.detail(id))\n            .then(resp => {\n                resolve({\n                    name: resp.data.genre.name\n                });\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst GenreModal = (props : IProps) => {\n    const genreState = useAsync < any > (() => apiGetGenre(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props\n            .form\n            .setFieldsValue(genreState.value);\n    }, [\n        !isSetForm.current,\n        !!genreState.value\n    ])\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async(err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.genre.update(props.id), values, {useJson: true});\n\n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.genre.create(), values, {useJson: true});\n\n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Form>\n                <Form.Item label=\"分类名称\">\n                    {props\n                        .form\n                        .getFieldDecorator('name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入分类名称'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Row type=\"flex\" justify=\"end\">\n                    <Col>\n                        <Button type=\"danger\" onClick={() => props.dismiss()}>\n                            取消\n                        </Button>\n                    </Col>\n                    <Col style={{\n                        marginLeft: '12px'\n                    }}>\n                        <Button type=\"primary\" onClick={handleSubmit}>\n                            确认\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'genre'})(GenreModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.genre.list())\n        .then(resp => {\n            resolve(resp.data.genre_list || []);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '分类名称',\n    dataIndex: 'name',\n    key: 'name'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Genre: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.genre.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有分类相关的书籍');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'name') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/genre/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n\n    return (\n        <div>\n            <h1> 分类列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加分类\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Genre;","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions, Spin} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetGenre = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.genre.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst GenreDetail : FC < IProps > = props => {\n    const genreState = useAsync < any > (() => apiGetGenre(props.match.params.id));\n    const genreData = genreState.value\n        ? genreState.value.genre\n        : {};\n    const bookData = genreState.value\n        ? genreState.value.genre_books\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"分类详情\"/>\n\n            <Spin spinning={genreState.loading}>\n                <h1>\n                    分类名称：{genreData.name}\n                </h1>\n                {bookData && bookData.map((bookItem, bookIndex) => {\n                    return (\n                        <Card\n                            style={{\n                            marginTop: 20\n                        }}\n                            type=\"inner\"\n                            title={`图书：${bookIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"标题\">\n                                    <Link to={`/book/${bookItem._id}`}>{bookItem.title}</Link>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"简介\">{bookItem.summary}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n                {bookData.length === 0 && <div>暂无图书</div>}\n            </Spin>\n\n        </div>\n    )\n}\n\nexport default GenreDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport moment from 'moment';\nimport {\n    Spin,\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    Select,\n    DatePicker\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\nconst {Option} = Select;\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst statusOptions = [{\n    label: '可供借阅',\n    value: '可供借阅'\n},{\n    label: '已借出',\n    value: '已借出'\n},{\n    label: '馆藏维护',\n    value: '馆藏维护'\n}]\n\nconst apiGetBookList = () => {\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.list())\n            .then(resp => {\n                const bookOptions = resp.data.book_list.map((bookItem) => {\n                    return {\n                        label: bookItem.title,\n                        value: bookItem._id,\n                    }\n                })\n                resolve(bookOptions);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\nconst apiGetBookInstance = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.bookinstance.detail(id))\n            .then(resp => {\n                const result = {\n                    book: resp.data.bookinstance.book._id,\n                    imprint: resp.data.bookinstance.imprint,\n                    status: resp.data.bookinstance.status,\n                    due_back: moment(resp.data.bookinstance.due_back)\n                }\n                resolve(result);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\n\nconst BookInstanceModal = (props : IProps) => {\n    const cacheState = useAsync<any>(apiGetBookList);\n    const bookInstanceState = useAsync<any>(() => apiGetBookInstance(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props.form.setFieldsValue(bookInstanceState.value);\n    }, [!isSetForm.current, !!bookInstanceState.value])\n\n    const bookOptions = cacheState.value || [];\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async (err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.bookinstance.update(props.id), values, {\n                                useJson: true\n                            });\n    \n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.bookinstance.create(), values, {\n                                useJson: true\n                            });\n    \n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Spin spinning={cacheState.loading}>\n                <Form>\n                    <Form.Item label=\"图书名称\">\n                        {props\n                            .form\n                            .getFieldDecorator('book', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请选择图书名称'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择图书名称\">\n                                    {bookOptions.map((optionItem) => {\n                                        return (\n                                            <Option value={optionItem.value}>\n                                                {optionItem.label}\n                                            </Option>\n                                        )\n                                    })}   \n                                </Select>\n                            )}\n                    </Form.Item>\n                    <Form.Item label=\"出版信息\">\n                        {props\n                            .form\n                            .getFieldDecorator('imprint', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入出版信息'\n                                    }\n                                ]\n                            })(<Input/>)}\n                    </Form.Item>\n   \n                    <Form.Item label=\"图书可借日期\">\n                        {props\n                            .form\n                            .getFieldDecorator('due_back', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入图书可借日期'\n                                    }\n                                ]\n                            })(<DatePicker/>)}\n                    </Form.Item>\n\n\n                    <Form.Item label=\"借阅状态\">\n                        {props\n                            .form\n                            .getFieldDecorator('status', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入借阅状态'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择状态\">\n                                    {\n                                        statusOptions.map((optionItem) => {\n                                            return (\n                                                <Option key={optionItem.value} value={optionItem.value}>\n                                                    {optionItem.label}\n                                                </Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            )}\n                    </Form.Item>\n\n                    <Row type=\"flex\" justify=\"end\">\n                        <Col>\n                            <Button type=\"danger\" onClick={() => props.dismiss()}>\n                                取消\n                            </Button>\n                        </Col>\n                        <Col\n                            style={{\n                            marginLeft: '12px'\n                        }}>\n                            <Button type=\"primary\" onClick={handleSubmit}>\n                                确认\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'bookinstance'})(BookInstanceModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport moment from 'moment';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.bookinstance.list())\n        .then(resp => {\n\n            const instanceList = resp.data.bookinstance_list.map((bookinstanceItem) => {\n                return {\n                    ...bookinstanceItem,\n                    dueBack: moment(bookinstanceItem.due_back).format('YYYY-MM-DD'),\n                    bookTitle: `${bookinstanceItem.book.title}：${bookinstanceItem.imprint}`\n                }\n            })\n\n            resolve(instanceList);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '书籍名称',\n    dataIndex: 'bookTitle',\n    key: 'bookTitle'\n},{\n    title: '借阅状态',\n    dataIndex: 'status',\n    key: 'status'\n},{\n    title: '归还日期',\n    dataIndex: 'dueBack',\n    key: 'dueBack'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Bookinstance: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.author.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有作者有关的书籍');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'bookTitle') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/bookinstance/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n    return (\n        <div>\n            <h1> 实例列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加实例\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Bookinstance;","import React from \"react\";\nimport Home from \"./modules/Home\";\nimport Login from \"./modules/Login\";\nimport Book from \"./modules/Book\";\nimport BookDetail from \"./modules/Book/Detail\";\nimport Author from \"./modules/Author\";\nimport AuthorDetail from \"./modules/Author/Detail\";\nimport Genre from \"./modules/Genre\";\nimport GenreDetail from \"./modules/Genre/Detail\";\nimport Bookinstance from \"./modules/Bookinstance\";\nimport BookinstanceDetail from \"./modules/Bookinstance/Detail\";\n\nexport interface IRouteCfgProps {\n  key: string;\n  title: string;\n  path: string;\n  exact?: boolean;\n  inMenu?: boolean;\n  hide?: boolean;\n  component: React.ComponentType<any>;\n}\n\nexport const routeCfg: IRouteCfgProps[] = [\n  {\n    key: \"home\",\n    title: \"首页\",\n    exact: true,\n    component: Home,\n    inMenu: true,\n    path: \"/\"\n  },\n  {\n    key: \"book\",\n    title: \"书籍\",\n    path: \"/book\",\n    exact: true,\n    component: Book,\n    inMenu: true\n  },\n  {\n    key: \"book-detail\",\n    title: \"书籍详情\",\n    path: \"/book/:id\",\n    component: BookDetail\n  },\n  {\n    key: \"author\",\n    title: \"作者\",\n    path: \"/author\",\n    exact: true,\n    component: Author,\n    inMenu: true\n  },\n  {\n    key: \"author-detail\",\n    title: \"作者详情\",\n    path: \"/author/:id\",\n    component: AuthorDetail\n  },\n  {\n    key: \"genre\",\n    title: \"分类\",\n    path: \"/genre\",\n    exact: true,\n    component: Genre,\n    inMenu: true\n  },\n  {\n    key: \"genre-detail\",\n    title: \"分类详情\",\n    path: \"/genre/:id\",\n    component: GenreDetail\n  },\n  {\n    key: \"bookinstance\",\n    title: \"书籍实例\",\n    path: \"/bookinstance\",\n    exact: true,\n    component: Bookinstance,\n    inMenu: true\n  },\n  {\n    key: \"bookinstance-detail\",\n    title: \"书籍实例详情\",\n    path: \"/bookinstance/:id\",\n    component: BookinstanceDetail\n  }\n];\n","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport moment from 'moment';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetDateil = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.bookinstance.detail(id))\n            .then(resp => {\n                resolve(resp.data.bookinstance);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst BookInstanceDetail : FC < IProps > = props => {\n    const bookInstanceState = useAsync < any > (() => apiGetDateil(props.match.params.id));\n\n    console.info(bookInstanceState.value);\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"实例详情\"/>\n            <Card loading={bookInstanceState.loading}>\n                {bookInstanceState.value &&\n                    <Descriptions column={1}>\n                        <Descriptions.Item label=\"ID\">{bookInstanceState.value._id}</Descriptions.Item>\n                        <Descriptions.Item label=\"标题\">\n                            <Link to={`/book/${bookInstanceState.value.book._id}`}>\n                                {bookInstanceState.value.book.title}\n                            </Link>\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"出版信息\">{bookInstanceState.value.imprint}</Descriptions.Item>\n                        <Descriptions.Item label=\"状态\">{bookInstanceState.value.status}</Descriptions.Item>\n                        <Descriptions.Item label=\"可借日期\">{moment(bookInstanceState.value.due_back).format('YYYY-MM-DD')}</Descriptions.Item>\n                    </Descriptions>\n                }\n            </Card>\n        </div>\n    )\n}\n\nexport default BookInstanceDetail;","import React, { useEffect } from \"react\";\nimport { Layout, Menu, Dropdown, Avatar } from \"antd\";\nimport { Switch, Route, NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { routeCfg } from \"../../config\";\nimport { AuthContext } from \"../../store/Auth\";\n\nconst { Header, Footer } = Layout;\n\nconst App = (props: RouteComponentProps) => {\n  const { state, dispatch } = React.useContext(AuthContext);\n\n  const handleLogout = () => {\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  };\n\n  return (\n    <Header className=\"l-header\">\n      <Menu className=\"l-menu\" theme=\"dark\" mode=\"horizontal\" selectedKeys={[props.location.pathname]}>\n        {routeCfg\n          .filter(route => {\n            return route.inMenu;\n          })\n          .map(route => {\n            return (\n              <Menu.Item key={route.path}>\n                <NavLink to={route.path}>{route.title}</NavLink>\n              </Menu.Item>\n            );\n          })}\n\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item>\n                <a onClick={handleLogout}>登出</a>\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <a className=\"ant-dropdown-link\" href=\"#\">\n            <Avatar icon=\"user\" /> {state.user || \"admin\"}\n          </a>\n        </Dropdown>\n      </Menu>\n    </Header>\n  );\n};\n\nexport default withRouter(App);\n","import React, { useEffect, useReducer } from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { Switch, Route, NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport NotFound from \"./modules/NotFound\";\nimport Content from \"./components/Content\";\nimport Header from \"./components/Header\";\n\nimport { routeCfg } from \"./config\";\nimport \"./App.scss\";\n\nconst { Footer } = Layout;\n\nconst App = (props: RouteComponentProps) => {\n  useEffect(function() {\n    document.title = \"Express Locallibrary Tutorial Demo\";\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Header />\n        <Content routes={routeCfg}>\n          <Switch>\n            {routeCfg.map(route => {\n              return <Route exact={!!route.exact} component={route.component} path={route.path} />;\n            })}\n            <Route component={NotFound} />\n          </Switch>\n        </Content>\n        <Footer className=\"l-footer\">Express Locallibrary Tutorial Demo ©2019 Created by zhangbx</Footer>\n      </Layout>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","import React, { useReducer } from \"react\";\nimport Login from \"./modules/Login\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthContext, initialState, reducer } from \"./store/Auth\";\n\nconst Entry = props => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // not login\n  if (!state.token) {\n    return (\n      <AuthContext.Provider\n        value={{\n          state,\n          dispatch\n        }}\n      >\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Redirect to=\"/login\" />\n        </Switch>\n      </AuthContext.Provider>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        state,\n        dispatch\n      }}\n    >\n      <Route component={App} />\n    </AuthContext.Provider>\n  );\n};\n\nexport default Entry;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./_App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}