{"version":3,"sources":["utils/API/apis sync nonrecursive //.[jt]sx?$","utils/API/apis/All.ts","utils/API/apis/Auth.ts","utils/API/index.ts","utils/http/history.ts","store/Auth/index.tsx","utils/http/index.ts","modules/Login/index.tsx","modules/NotFound/index.tsx","components/Content/index.tsx","modules/Home/index.tsx","components/Modal/index.tsx","modules/Book/AddModal.tsx","modules/Book/index.tsx","modules/Book/Detail.tsx","modules/Author/AddModal.tsx","modules/Author/index.tsx","modules/Author/Detail.tsx","modules/Genre/AddModal.tsx","modules/Genre/index.tsx","modules/Genre/Detail.tsx","modules/Bookinstance/AddModal.tsx","modules/Bookinstance/index.tsx","config.tsx","modules/Bookinstance/Detail.tsx","components/Header/index.tsx","App.tsx","_App.tsx","serviceWorker.js","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HOST","API","home","getList","book","create","delete","update","detail","list","author","genre","bookinstance","login","isDev","process","apiCtx","require","reduce","file","path","basename","extname","config","host","createAPI","apis","result","key","pathname","args","index","replace","match","arg","undefined","enhanced","createBrowserHistory","forceRefresh","initialState","isAuthenticated","user","token","localStorage","getItem","reducer","state","action","type","setItem","payload","clear","history","push","AuthContext","React","createContext","axios","dataSerializer","params","qs","stringify","arrayFormat","allowDots","interceptors","request","use","timeout","useJson","method","headers","transformRequest","noToken","Authorization","response","data","success","error","status","removeItem","location","Form","name","props","form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","dispatch","useContext","fieldsError","usernameError","passwordError","className","Item","validateStatus","help","rules","required","message","prefix","style","color","placeholder","onClick","validateFields","err","values","a","http","post","Auth","resp","username","width","htmlType","disabled","some","field","NotFound","Content","Layout","withRouter","nav","routes","find","route","isRightRoutes","navTitle","title","to","children","apiGetList","Promise","reject","get","All","then","catch","Home","useAsync","loading","value","spinning","book_count","book_instance_count","book_instance_available_count","author_count","genre_count","Modal","defaultSettings","destroyOnClose","footer","maskClosable","closable","open","destroyed","withResolve","withReject","settings","onOk","ev","close","dismiss","onCancel","div","document","createElement","destroy","unmountComponentAtNode","body","removeChild","render","reason","visible","callback","TheComponent","component","childProps","reactRender","afterClose","Children","child","cloneElement","appendChild","Option","Select","apiGetAuthors","options","author_list","authorItem","label","family_name","first_name","_id","apiGetGenres","genre_list","apiGetCache","all","apiGetBook","bookData","genreItem","cacheState","bookState","isSetForm","useRef","useEffect","current","setFieldsValue","authorOptions","genreGroups","optionItem","TextArea","Group","justify","marginLeft","bookList","book_list","bookItem","authorName","columns","dataIndex","align","Book","useAsyncRetry","retry","handleDelete","record","AddModal","marginBottom","bordered","rowKey","col","text","handleUpdate","dataSource","BookDetail","instancesData","book_instances","onBack","goBack","column","summary","isbn","length","instanceItem","instanceIndex","marginTop","due_back","imprint","authorState","date_of_birth","moment","date_of_death","birth","format","death","Author","AuthorDetail","authorData","author_books","bookIndex","genreState","Genre","GenreDetail","genreData","genre_books","statusOptions","apiGetBookList","bookOptions","bookInstanceState","instanceList","bookinstance_list","bookinstanceItem","dueBack","bookTitle","routeCfg","exact","inMenu","Header","Footer","theme","mode","selectedKeys","filter","overlay","href","icon","Entry","useReducer","Provider","App","Login","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36d18534.chunk.js","sourcesContent":["var map = {\n\t\"./All.ts\": 232,\n\t\"./Auth.ts\": 233\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 231;","export const HOST = [\"http://localhost:5001/api\", \"http://api.jokingzhang.com/demo-library/api\"];\n\nexport const API = {\n  home: {\n    getList: \"/home\"\n  },\n  book: {\n    create: \"/book/create\",\n    delete: \"/book/:id/delete\",\n    update: \"/book/:id/update\",\n    detail: \"/book/:id\",\n    list: \"/books\"\n  },\n  author: {\n    create: \"/author/create\",\n    delete: \"/author/:id/delete\",\n    update: \"/author/:id/update\",\n    detail: \"/author/:id\",\n    list: \"/authors\"\n  },\n  genre: {\n    create: \"/genre/create\",\n    delete: \"/genre/:id/delete\",\n    update: \"/genre/:id/update\",\n    detail: \"/genre/:id\",\n    list: \"/genres\"\n  },\n  bookinstance: {\n    create: \"/bookinstance/create\",\n    delete: \"/bookinstance/:id/delete\",\n    update: \"/bookinstance/:id/update\",\n    detail: \"/bookinstance/:id\",\n    list: \"/bookinstances\"\n  }\n};\n","export const HOST = [\"http://localhost:5001/auth\", \"http://api.jokingzhang.com/demo-library/auth\"];\n\nexport const API = {\n  login: \"/login\"\n};\n","import path from \"path\";\n\n// 导入接口定义\nimport { API as All } from \"./apis/All\";\nimport { API as Auth } from \"./apis/Auth\";\n\ntype API<T> = { [P in keyof T]: T[P] extends object ? API<T[P]> : (...args: Array<string | number>) => string };\n\ninterface IAPI {\n  // 这里需要传递接口结构声明\n  All: typeof All;\n  Auth: typeof Auth;\n}\n\nconst isDev = process.env.NODE_ENV === \"development\";\n// @ts-ignore\nconst apiCtx = require.context(\"./apis\", false, /\\.[jt]sx?$/);\n\nexport default apiCtx.keys().reduce((exports, file) => {\n  exports[path.basename(file, path.extname(file))] = enhanced(apiCtx(file));\n\n  return exports;\n}, {}) as API<\n  IAPI & {\n    [key: string]: any;\n  }\n>;\n\nfunction enhanced(config) {\n  const host = isDev ? config.HOST[0] : config.HOST[1];\n  const createAPI = apis =>\n    Object.keys(apis).reduce((result, key) => {\n      const pathname = apis[key];\n\n      result[key] =\n        typeof pathname === \"string\"\n          ? (...args) => {\n              let index = 0;\n\n              return (\n                host +\n                pathname.replace(/:[^/]+/gi, match => {\n                  const arg = args[index++];\n\n                  return arg === undefined ? match : arg;\n                })\n              );\n            }\n          : createAPI(pathname);\n\n      return result;\n    }, {});\n\n  return createAPI(config.API);\n}\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory({ forceRefresh: true });\n","import React from \"react\";\nimport history from \"../../utils/http/history\";\n\nexport const initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: null\n} as any;\n\nconst token = localStorage.getItem(\"token\");\nconst user = localStorage.getItem(\"user\");\n\nif (token) {\n  initialState.isAuthenticated = true;\n  initialState.token = token;\n}\n\nif (user) {\n  initialState.user = user;\n}\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      localStorage.setItem(\"user\", action.payload.user);\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n    case \"LOGOUT\":\n      localStorage.clear();\n      history.push(\"/login\");\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthContext = React.createContext(initialState);\n","// 文档查看：https://github.com/mzabriskie/axios\nimport axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from \"axios\";\nimport { Router } from \"react-router-dom\";\nimport { Modal } from \"antd\";\n// import cookies from 'utils/cookie';\nimport history from \"./history\";\nimport qs from \"qs\";\nimport { message as AntdMessage } from \"antd\";\n// import * as constants from 'config/constant';\n\ndeclare module \"axios\" {\n  // tslint:disable-next-line\n  interface AxiosRequestConfig {\n    useJson?: boolean;\n    noToken?: boolean;\n    verifytoken?: boolean;\n    // 默认支持token过期提醒，如果不需要该功能，则传false值\n    expiredWarning?: boolean;\n  }\n\n  // tslint:disable-next-line\n  interface AxiosResponse {\n    [key: string]: any;\n  }\n}\n\nexport default axios;\n\ntype ErrorCode = number | string;\ntype ErrorMsg = string;\ninterface IError extends Error {\n  error_code: ErrorCode;\n  error_msg: ErrorMsg;\n  response: AxiosResponse;\n}\n\ninterface IData {\n  error_msg?: ErrorMsg;\n  error_description?: ErrorMsg;\n  error_message?: ErrorMsg;\n  message?: ErrorMsg;\n  description?: ErrorMsg;\n  msg?: ErrorMsg;\n\n  error_code?: ErrorCode;\n  code?: ErrorCode;\n}\n\nconst ERROR_MSG = {\n  /* 网络类异常 */\n  OFF_LINE: \"抱歉，您貌似还没连接到网络，请检查网络连接\",\n  CANCEL: \"抱歉，请求已取消\",\n  200: \"抱歉，请求失败\",\n  401: \"抱歉，您貌似还没有登录\",\n  403: \"抱歉，您没有权限访问该页面\",\n  413: \"抱歉，您上传文件太大\",\n\n  404: \"抱歉，您访问的接口地址貌似不存在\",\n  500: \"抱歉，当前服务器异常，请稍后再试\",\n  503: \"抱歉，当前服务器异常，请稍后再试\"\n};\n\nexport function dataSerializer(params: object) {\n  return qs.stringify(params, {\n    arrayFormat: \"indices\",\n    allowDots: true\n  });\n}\n\naxios.interceptors.request.use((config: AxiosRequestConfig) => {\n  if (!config.timeout) {\n    config.timeout = 60 * 1000;\n  }\n\n  // 增加对表单数组提交的支持\n  if (!config.useJson && (config.method === \"post\" || config.method === \"put\")) {\n    config.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    config.transformRequest = dataSerializer;\n  }\n\n  // 请求添加token头\n  if (!config.noToken) {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n\n  return config;\n});\n\naxios.interceptors.response.use(\n  (response: AxiosResponse) => {\n    let data = response.data;\n    // console.info(response);\n\n    if (data && typeof data === \"object\") {\n      if (data.success === \"true\") {\n        return data;\n      }\n    }\n\n    return response;\n  },\n  error => {\n    // console.info(error);\n    if (error.response.status === 401) {\n      //place your reentry code\n\n      localStorage.removeItem(\"token\");\n      if (history.location.pathname !== \"/login\") {\n        history.push(\"/login\");\n      }\n      //   return new Promise((resolve, reject) => {\n      //     Modal.confirm({\n      //       title: \"您的登录已失效\",\n      //       content: \"是否立即去登录？\",\n      //       okText: \"去登录\",\n      //       cancelText: \"取消\",\n      //       onOk(close) {\n      //         close();\n      //         history.push(\"/login\");\n      //       },\n      //       onCancel(close) {\n      //         close();\n      //         reject(error);\n      //       }\n      //     });\n      //   });\n    }\n    return error;\n  }\n);\n","import React, { FC, useContext } from \"react\";\nimport { useAsync } from \"react-use\";\nimport { Spin, message, Form, Input, Icon, Button } from \"antd\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { AuthContext } from \"../../store/Auth\";\nimport http from \"../../utils/http\";\nimport { FormComponentProps } from \"antd/lib/form\";\nimport \"./style.scss\";\n\ninterface IProps extends FormComponentProps {\n  className?: string;\n}\n\nconst Login = (props: IProps & RouteComponentProps) => {\n  // const {loading, value, error} = useAsync < any > (apiGetList);\n  const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = props.form;\n  const { dispatch } = React.useContext(AuthContext);\n\n  const handleSubmit = () => {\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        try {\n          const resp = await http.post(API.Auth.login(), values, { useJson: true });\n          message.success(\"登录成功\");\n\n          dispatch({\n            type: \"LOGIN\",\n            payload: {\n              user: values.username,\n              token: resp.data.token\n            }\n          });\n          props.history.push(\"/\");\n        } catch (err) {\n          message.error(err.message);\n        }\n      }\n    });\n  };\n\n  function hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n  }\n\n  const usernameError = isFieldTouched(\"username\") && getFieldError(\"username\");\n  const passwordError = isFieldTouched(\"password\") && getFieldError(\"password\");\n\n  return (\n    <div className=\"p-login\">\n      <h1> MDN 本地图书馆网站 </h1>\n      <Form className=\"p-login-form\">\n        <Form.Item validateStatus={usernameError ? \"error\" : \"\"} help={usernameError || \"\"}>\n          {getFieldDecorator(\"username\", {\n            rules: [{ required: true, message: \"Please input your username!\" }]\n          })(<Input prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />} placeholder=\"Username\" />)}\n        </Form.Item>\n        <Form.Item validateStatus={passwordError ? \"error\" : \"\"} help={passwordError || \"\"}>\n          {getFieldDecorator(\"password\", {\n            rules: [{ required: true, message: \"Please input your Password!\" }]\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            onClick={handleSubmit}\n            style={{ width: \"100%\" }}\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={hasErrors(getFieldsError())}\n          >\n            登录\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Form.create({ name: \"login\" })(Login);\n","import React, {FC} from 'react';\n\ninterface IProps {\n    className?: string;\n}\n\nconst NotFound: FC<IProps> = props => {\n    return (\n        <div>\n            NotFound\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport {NavLink, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {Layout, Breadcrumb} from 'antd';\nimport {IRouteCfgProps} from '../../config';\nimport './style.scss';\n\nconst {Content} = Layout\n\ninterface ILayoutContentProps extends RouteComponentProps {\n    children : React.ReactChild;\n    routes : IRouteCfgProps[];\n}\n\nconst LayoutContent = (props : ILayoutContentProps) => {\n\n    const nav = props\n        .routes\n        .find((route) => {\n            return props.location.pathname === route.path;\n        })\n    const isRightRoutes = !!nav;\n\n    const navTitle = nav ? nav.title : '';\n\n    return (\n        <Content className=\"c-content\">\n            {isRightRoutes && \n                (<Breadcrumb className=\"c-content-breadcrumb\">\n                    <Breadcrumb.Item>\n                        <NavLink to=\"/\">首页</NavLink>\n                    </Breadcrumb.Item>\n                    {props.location.pathname !== '/' && \n                        <Breadcrumb.Item>\n                            <NavLink to={props.location.pathname}>{navTitle}</NavLink>\n                        </Breadcrumb.Item>\n                    }\n                </Breadcrumb>)\n            }\n            {props.children}\n        </Content>\n    )\n}\n\nexport default withRouter(LayoutContent);","import React, {FC} from 'react';\nimport {useAsync} from 'react-use';\nimport {Spin, message} from 'antd';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.home.getList())\n        .then(resp => {\n            resolve(resp.data);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst Home: FC <IProps> = props => {\n    const {loading, value, error} = useAsync < any > (apiGetList);\n\n    return (\n        <div>\n            <h1>图书馆首页</h1>\n            <p>欢迎来到图书馆！</p>\n            <h2>动态信息</h2>\n            <Spin spinning={loading}>\n                {value && <ul>\n                    <li>\n                        <b>图书：</b>\n                        {value.book_count}\n                    </li>\n                    <li>\n                        <b>图书实例：</b>\n                        {value.book_instance_count}\n                    </li>\n                    <li>\n                        <b>可借阅图书实例：</b>\n                        {value.book_instance_available_count}\n                    </li>\n                    <li>\n                        <b>作者：</b>\n                        {value.author_count}\n                    </li>\n                    <li>\n                        <b>图书分类：</b>\n                        {value.genre_count}\n                    </li>\n                </ul>\n}\n            </Spin>\n        </div>\n    )\n}\n\nexport default Home;","/* tslint:disable */\nimport React, { Children, cloneElement } from 'react';\nimport { render as reactRender, unmountComponentAtNode } from 'react-dom';\nimport Modal, { ModalProps } from 'antd/lib/modal';\nimport './style.scss';\n\nexport default Modal as INewModal;\n\ntype INewModal = typeof Modal & {\n    open: (\n        config: IConfig\n    ) => IHandler & {\n        result: Promise<any>;\n    };\n};\n\ninterface IHandler {\n    close(data: any): void;\n    dismiss(reason: any): void;\n}\n\ninterface IConfig extends Omit<ModalProps, 'onOk' | 'onCancel'> {\n    onOk?(e: React.MouseEvent<any>, handler: IHandler): void;\n    onCancel?(e: React.MouseEvent<any>, handler: IHandler): void;\n    component?: React.ComponentType | React.ReactElement<any>;\n}\n\nconst defaultSettings = {\n    destroyOnClose: true,\n    footer: null,\n    maskClosable: false,\n    closable: false\n};\n\n/**\n * @desc 给antd的Modal扩展一个open方法，用来方便的创建更灵活的modal。\n *       默认的Modal组件依赖于组件声明式受控调用，非常麻烦，尤其是需要从组件内部关闭modal时，需要将关闭句柄向下传递；\n *       并且对于多modal场景下，使用也非常麻烦，需要定义多个状态值对应到不同的modal的visible状态！\n *\n *       新增的Modal.open方法，通过封装隐藏了visible控制，通过对外暴漏以及向下传递close、dismiss句柄以及promise，可以方便的用来从外部、组件内部关闭modal，\n *       并且可以方便的通过promise来处理modal关闭的回调！\n *\n * @usage Modal.open({ component: YourComponent / <YourComponent />, ...ModalProps  })\n *\n *        component参数支持传入组件定义，或者直接传入该组件调用的reactNode。\n *        无论哪种方式，Modal.open都会向其传递close、dismiss属性。\n *        在YourComponent组件内部，你可以方便的通过这两种方法来关闭modal。\n *\n *        close、dismiss两个方法都可以用来关闭modal，不同的是他们对于返回的promise的状态有影响：\n *        close => Promise.resolved\n *        dismiss => Promise.rejected\n *\n * @param {Object} config 配置参数，支持Modal的所有的props参数，另外新增扩展了component参数，具体使用参考上方说明!\n *\n * @return {Object} { close, dismiss, result: Promise }\n *          返回一个对象，包含了close、dismiss两个关闭方法，以及一个result的promise对象，可以通过该promise来访问modal关闭时的回调！\n */\nexport const open = ((Modal as INewModal).open = (props: IConfig = {}) => {\n    let destroyed : any;\n    let withResolve : any;\n    let withReject : any;\n\n    const settings = { ...defaultSettings, ...props };\n\n    if (settings.footer === true) {\n        delete settings.footer;\n    }\n\n    if (props.onOk) {\n        settings.onOk = ev => props.onOk!(ev, { close, dismiss });\n    }\n\n    if (props.onCancel) {\n        settings.onCancel = ev => props.onCancel!(ev, { close, dismiss });\n    }\n\n    const div = document.createElement('div');\n\n    document.body.appendChild(div);\n\n    function destroy() {\n        if (!destroyed) {\n            destroyed = true;\n\n            unmountComponentAtNode(div);\n\n            document.body.removeChild(div);\n        }\n    }\n\n    function close(data : any) {\n        render(false, () => withResolve(data));\n    }\n\n    function dismiss(reason : any) {\n        render(false, () => withReject(reason));\n    }\n\n    function render(visible : boolean, callback?: () => void) {\n        const { component: TheComponent, ...props } = settings;\n        const childProps = {\n            close,\n            dismiss\n        };\n\n        let children;\n\n        if (typeof TheComponent === 'function') {\n            children = <TheComponent />;\n        } else {\n            children = TheComponent;\n        }\n\n        reactRender(\n            // @ts-ignore\n            <Modal\n                // @ts-ignore\n                onCancel={dismiss}\n                // @ts-ignore\n                onOk={close}\n                {...props}\n                visible={visible}\n                afterClose={() => {\n                    if (!callback) {\n                        callback = withReject;\n                    }\n\n                    callback!();\n                    destroy();\n                }}>\n                {Children.map(children, child => cloneElement(child as React.ReactElement<any>, childProps))}\n            </Modal>,\n            div\n        );\n    }\n\n    render(true);\n\n    return {\n        close,\n        dismiss,\n        result: new Promise((resolve, reject) => {\n            withResolve = resolve;\n            withReject = reject;\n        })\n    };\n});\n","import React, { useRef, useEffect } from \"react\";\nimport { useAsync } from \"react-use\";\nimport API from \"../../utils/API\";\nimport http from \"../../utils/http\";\nimport { Spin, Row, Col, Button, Form, message, Input, Select, Checkbox } from \"antd\";\nimport { FormComponentProps } from \"antd/lib/form\";\n\nconst { Option } = Select;\n\ninterface IProps extends FormComponentProps {\n  id?: number;\n  close?: any;\n  dismiss?: any;\n}\n\nconst apiGetAuthors = new Promise((resolve, reject) => {\n  http\n    .get(API.All.author.list())\n    .then(resp => {\n      const options = resp.data.author_list\n        ? resp.data.author_list.map(authorItem => {\n            return { label: `${authorItem.family_name}，${authorItem.first_name}`, value: authorItem._id };\n          })\n        : [];\n\n      resolve(options);\n    })\n    .catch(error => {\n      // message.error(error.message);\n      reject(error.message);\n    });\n});\n\nconst apiGetGenres = new Promise((resolve, reject) => {\n  http\n    .get(API.All.genre.list())\n    .then(resp => {\n      resolve(resp.data.genre_list || []);\n    })\n    .catch(error => {\n      // message.error(error.message);\n      reject(error.message);\n    });\n});\n\nconst apiGetCache = () => Promise.all([apiGetAuthors, apiGetGenres]);\n\nconst apiGetBook = id => {\n  if (!id) {\n    return Promise.resolve(null);\n  }\n\n  return new Promise((resolve, reject) => {\n    http\n      .get(API.All.book.detail(id))\n      .then(resp => {\n        const bookData = {\n          ...resp.data.book,\n          author: resp.data.book.author._id,\n          genre: resp.data.book.genre.map(genreItem => {\n            return genreItem._id;\n          })\n        };\n        resolve(bookData);\n      })\n      .catch(error => {\n        message.error(error.message);\n        reject(error.message);\n      });\n  });\n};\n\nconst BookModal = (props: IProps) => {\n  const cacheState = useAsync<any>(apiGetCache);\n  const bookState = useAsync<any>(() => apiGetBook(props.id));\n  const isSetForm = useRef(false);\n\n  useEffect(() => {\n    isSetForm.current = true;\n    props.form.setFieldsValue(bookState.value);\n  }, [!isSetForm.current, !!bookState.value]);\n\n  const authorOptions = cacheState.value ? cacheState.value[0] : [];\n  const genreGroups = cacheState.value ? cacheState.value[1] : [];\n\n  const handleSubmit = () => {\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        try {\n          if (props.id) {\n            await http.post(API.All.book.update(props.id), values, {\n              useJson: true\n            });\n\n            message.success(\"修改成功\");\n          } else {\n            await http.post(API.All.book.create(), values, {\n              useJson: true\n            });\n\n            message.success(\"添加成功\");\n          }\n          props.close();\n        } catch (err) {\n          message.error(err.message);\n        }\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Spin spinning={cacheState.loading}>\n        <Form>\n          <Form.Item label=\"标题\">\n            {props.form.getFieldDecorator(\"title\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入标题\"\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"作者\">\n            {props.form.getFieldDecorator(\"author\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请选择作者\"\n                }\n              ]\n            })(\n              <Select placeholder=\"请选择作者\">\n                {authorOptions.map(optionItem => {\n                  return <Option value={optionItem.value}>{optionItem.label}</Option>;\n                })}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"简介\">\n            {props.form.getFieldDecorator(\"summary\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入简介\"\n                }\n              ]\n            })(<Input.TextArea />)}\n          </Form.Item>\n          <Form.Item label=\"ISBN\">\n            {props.form.getFieldDecorator(\"isbn\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入ISBN\"\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"分类\">\n            {props.form.getFieldDecorator(\"genre\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"请输入分类\"\n                }\n              ]\n            })(\n              <Checkbox.Group>\n                {genreGroups.map(genreItem => {\n                  return <Checkbox value={genreItem._id}>{genreItem.name}</Checkbox>;\n                })}\n              </Checkbox.Group>\n            )}\n          </Form.Item>\n          <Row type=\"flex\" justify=\"end\">\n            <Col>\n              <Button type=\"danger\" onClick={() => props.dismiss()}>\n                取消\n              </Button>\n            </Col>\n            <Col\n              style={{\n                marginLeft: \"12px\"\n              }}\n            >\n              <Button type=\"primary\" onClick={handleSubmit}>\n                确认\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </Spin>\n    </div>\n  );\n};\n\nexport default Form.create({ name: \"book\" })(BookModal);\n","import React, { FC } from \"react\";\nimport { useAsyncRetry } from \"react-use\";\nimport { Button, message, Table, Row } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../../components/Modal\";\nimport API from \"../../utils/API\";\nimport http from \"../../utils/http\";\nimport AddModal from \"./AddModal\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst apiGetList = () =>\n  new Promise((resolve, reject) => {\n    http\n      .get(API.All.book.list())\n      .then(resp => {\n        const bookList =\n          resp.data.book_list &&\n          resp.data.book_list.map(bookItem => {\n            return {\n              ...bookItem,\n              authorName: `${bookItem.author.family_name}，${bookItem.author.first_name}`\n            };\n          });\n\n        resolve(bookList);\n      })\n      .catch(error => {\n        // message.error(error.message);\n        reject(error.message);\n      });\n  });\n\nconst columns = [\n  {\n    title: \"书名\",\n    dataIndex: \"title\",\n    key: \"title\"\n  },\n  {\n    title: \"作者\",\n    dataIndex: \"authorName\",\n    key: \"authorName\"\n  },\n  {\n    title: \"操作\",\n    dataIndex: \"options\",\n    align: \"right\" as \"right\",\n    key: \"options\"\n  }\n];\n\nconst Book: FC<IProps> = props => {\n  const { loading, value, error, retry } = useAsyncRetry<any>(apiGetList);\n\n  function handleAdd() {\n    Modal.open({\n      component: <AddModal />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  function handleUpdate(record: any) {\n    Modal.open({\n      // @ts-ignore\n      component: <AddModal id={record._id} />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  const handleDelete = async (record: any) => {\n    try {\n      await http.post(\n        API.All.book.delete(record._id),\n        {},\n        {\n          useJson: true\n        }\n      );\n\n      message.success(\"删除成功\");\n      retry();\n    } catch (err) {\n      message.error(\"请先删除所有图书实例\");\n    }\n  };\n\n  function renderColumns() {\n    return columns.map(col => {\n      if (col.key === \"options\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Button type=\"link\" onClick={() => handleUpdate(record)}>\n                  更新\n                </Button>\n                <Button type=\"link\" onClick={() => handleDelete(record)}>\n                  删除\n                </Button>\n              </>\n            );\n          }\n        };\n      }\n\n      if (col.key === \"title\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Link to={`/book/${record._id}`}>{text}</Link>\n              </>\n            );\n          }\n        };\n      }\n\n      return col;\n    });\n  }\n\n  return (\n    <div>\n      <h1> 图书列表 </h1>\n      <Row type=\"flex\" justify=\"end\">\n        <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n          添加图书\n        </Button>\n      </Row>\n      <Table bordered rowKey=\"_id\" columns={renderColumns()} dataSource={value} loading={loading} />\n    </div>\n  );\n};\n\nexport default Book;\n","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetBook = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst BookDetail : FC < IProps > = props => {\n\n    const bookState = useAsync < any > (() => apiGetBook(props.match.params.id));\n\n    const bookData = bookState.value\n        ? bookState.value.book\n        : null;\n    const instancesData = bookState.value\n        ? bookState.value.book_instances\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"图书详情\"/>\n            <Card loading={bookState.loading}>\n                {bookData && <Descriptions column={1} title={bookData.title}>\n                    <Descriptions.Item label=\"作者\">{`${bookData.author.family_name}，${bookData.author.first_name}`}</Descriptions.Item>\n                    <Descriptions.Item label=\"简介\">{bookData.summary}</Descriptions.Item>\n                    <Descriptions.Item label=\"ISBN\">{bookData.isbn}</Descriptions.Item>\n                    <Descriptions.Item label=\"分类\">\n                        {bookData.genre && bookData\n                            .genre\n                            .map((genreItem) => {\n                                return <Link to={`/genre/${genreItem._id}`}>{genreItem.name}</Link>\n                            })\n                        }\n                    </Descriptions.Item>\n                </Descriptions>}\n\n                {instancesData.length > 0 && <hr />}\n\n                {instancesData && instancesData.map((instanceItem, instanceIndex) => {\n                    return (\n                        <Card style={{\n                            marginTop: 20\n                        }} type=\"inner\" title={`实例：${instanceIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"状态\">{instanceItem.status}</Descriptions.Item>\n                                <Descriptions.Item label=\"归还日期\">{instanceItem.due_back}</Descriptions.Item>\n                                <Descriptions.Item label=\"出版信息\">{instanceItem.imprint}</Descriptions.Item>\n                                <Descriptions.Item label=\"ID\"><Link to={`/bookinstance/${instanceItem._id}`}> {instanceItem._id} </Link></Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n\n            </Card>\n        </div>\n    )\n}\n\nexport default BookDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport moment from 'moment';\nimport {\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    DatePicker\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetAuthor = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.author.detail(id))\n            .then(resp => {\n                resolve({\n                    first_name: resp.data.author.first_name,\n                    family_name: resp.data.author.family_name,\n                    date_of_birth: moment(resp.data.author.date_of_birth),\n                    date_of_death: moment(resp.data.author.date_of_death),\n                });\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst AuthorModal = (props : IProps) => {\n    const authorState = useAsync < any > (() => apiGetAuthor(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props\n            .form\n            .setFieldsValue(authorState.value);\n    }, [\n        !isSetForm.current,\n        !!authorState.value\n    ])\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async(err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.author.update(props.id), values, {useJson: true});\n\n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.author.create(), values, {useJson: true});\n\n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Form>\n                <Form.Item label=\"姓的拼音\">\n                    {props\n                        .form\n                        .getFieldDecorator('first_name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入姓的拼音'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"姓的拼音\">\n                    {props\n                        .form\n                        .getFieldDecorator('family_name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入姓的拼音'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"出生日期\">\n                    {props\n                        .form\n                        .getFieldDecorator('date_of_birth', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入出生日期'\n                                }\n                            ]\n                        })(<DatePicker/>)}\n                </Form.Item>\n                <Form.Item label=\"死亡日期\">\n                    {props\n                        .form\n                        .getFieldDecorator('date_of_death', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入死亡日期'\n                                }\n                            ]\n                        })(<DatePicker/>)}\n                </Form.Item>\n                <Row type=\"flex\" justify=\"end\">\n                    <Col>\n                        <Button type=\"danger\" onClick={() => props.dismiss()}>\n                            取消\n                        </Button>\n                    </Col>\n                    <Col style={{\n                        marginLeft: '12px'\n                    }}>\n                        <Button type=\"primary\" onClick={handleSubmit}>\n                            确认\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'author'})(AuthorModal);","import React, { FC } from \"react\";\nimport { useAsyncRetry } from \"react-use\";\nimport { Button, message, Table, Row } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../../components/Modal\";\nimport moment from \"moment\";\nimport API from \"../../utils/API\";\nimport http from \"../../utils/http\";\nimport AddModal from \"./AddModal\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst apiGetList = () =>\n  new Promise((resolve, reject) => {\n    http\n      .get(API.All.author.list())\n      .then(resp => {\n        const bookList =\n          resp.data.author_list &&\n          resp.data.author_list.map(authorItem => {\n            return {\n              ...authorItem,\n              authorName: `${authorItem.family_name}，${authorItem.first_name}`,\n              birth: moment(authorItem.date_of_birth).format(\"YYYY-MM-DD\"),\n              death: moment(authorItem.date_of_death).format(\"YYYY-MM-DD\")\n            };\n          });\n\n        resolve(bookList);\n      })\n      .catch(error => {\n        // message.error(error.message);\n        reject(error.message);\n      });\n  });\n\nconst columns = [\n  {\n    title: \"作者名称\",\n    dataIndex: \"authorName\",\n    key: \"authorName\"\n  },\n  {\n    title: \"出生日期\",\n    dataIndex: \"birth\",\n    key: \"birth\"\n  },\n  {\n    title: \"死亡日期\",\n    dataIndex: \"death\",\n    key: \"death\"\n  },\n  {\n    title: \"操作\",\n    dataIndex: \"options\",\n    align: \"right\" as \"right\",\n    key: \"options\"\n  }\n];\n\nconst Author: FC<IProps> = props => {\n  const { loading, value, error, retry } = useAsyncRetry<any>(apiGetList);\n\n  function handleAdd() {\n    Modal.open({\n      component: <AddModal />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  function handleUpdate(record: any) {\n    Modal.open({\n      // @ts-ignore\n      component: <AddModal id={record._id} />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  const handleDelete = async (record: any) => {\n    try {\n      await http.post(\n        API.All.author.delete(record._id),\n        {},\n        {\n          useJson: true\n        }\n      );\n\n      message.success(\"删除成功\");\n      retry();\n    } catch (err) {\n      message.error(\"请先删除所有作者有关的书籍\");\n    }\n  };\n\n  function renderColumns() {\n    return columns.map(col => {\n      if (col.key === \"options\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Button type=\"link\" onClick={() => handleUpdate(record)}>\n                  更新\n                </Button>\n                <Button type=\"link\" onClick={() => handleDelete(record)}>\n                  删除\n                </Button>\n              </>\n            );\n          }\n        };\n      }\n\n      if (col.key === \"authorName\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Link to={`/author/${record._id}`}>{text}</Link>\n              </>\n            );\n          }\n        };\n      }\n\n      return col;\n    });\n  }\n\n  return (\n    <div>\n      <h1> 作者列表 </h1>\n      <Row type=\"flex\" justify=\"end\">\n        <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n          添加作者\n        </Button>\n      </Row>\n      <Table bordered rowKey=\"_id\" columns={renderColumns()} dataSource={value} loading={loading} />\n    </div>\n  );\n};\n\nexport default Author;\n","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport moment from 'moment';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetAuthor = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.author.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst AuthorDetail : FC < IProps > = props => {\n    const authorState = useAsync < any > (() => apiGetAuthor(props.match.params.id));\n\n    const authorData = authorState.value\n        ? authorState.value.author\n        : null;\n    const bookData = authorState.value\n        ? authorState.value.author_books\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"作者详情\"/>\n            <Card loading={authorState.loading}>\n                {authorData && <Descriptions column={1} title={bookData.title}>\n                    <Descriptions.Item label=\"姓名\">{`${authorData.family_name}，${authorData.first_name}`}</Descriptions.Item>\n                    <Descriptions.Item label=\"出生日期\">{moment(authorData.date_of_birth).format('YYYY-MM-DD')}</Descriptions.Item>\n                    <Descriptions.Item label=\"死亡日期\">{moment(authorData.date_of_death).format('YYYY-MM-DD')}</Descriptions.Item>\n                </Descriptions>}\n\n                <hr/> \n                \n                {bookData && bookData.map((bookItem, bookIndex) => {\n                    return (\n                        <Card\n                            style={{\n                            marginTop: 20\n                        }}\n                            type=\"inner\"\n                            title={`图书：${bookIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"标题\">\n                                    <Link to={`/book/${bookItem._id}`}>{bookItem.title}</Link>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"简介\">{bookItem.summary}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n                {bookData.length === 0 && <div>暂无图书</div>}\n\n            </Card>\n        </div>\n    )\n}\n\nexport default AuthorDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport {\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetGenre = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.genre.detail(id))\n            .then(resp => {\n                resolve({\n                    name: resp.data.genre.name\n                });\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst GenreModal = (props : IProps) => {\n    const genreState = useAsync < any > (() => apiGetGenre(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props\n            .form\n            .setFieldsValue(genreState.value);\n    }, [\n        !isSetForm.current,\n        !!genreState.value\n    ])\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async(err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.genre.update(props.id), values, {useJson: true});\n\n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.genre.create(), values, {useJson: true});\n\n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Form>\n                <Form.Item label=\"分类名称\">\n                    {props\n                        .form\n                        .getFieldDecorator('name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入分类名称'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Row type=\"flex\" justify=\"end\">\n                    <Col>\n                        <Button type=\"danger\" onClick={() => props.dismiss()}>\n                            取消\n                        </Button>\n                    </Col>\n                    <Col style={{\n                        marginLeft: '12px'\n                    }}>\n                        <Button type=\"primary\" onClick={handleSubmit}>\n                            确认\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'genre'})(GenreModal);","import React, { FC } from \"react\";\nimport { useAsyncRetry } from \"react-use\";\nimport { Button, message, Table, Row } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../../components/Modal\";\nimport API from \"../../utils/API\";\nimport http from \"../../utils/http\";\nimport AddModal from \"./AddModal\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst apiGetList = () =>\n  new Promise((resolve, reject) => {\n    http\n      .get(API.All.genre.list())\n      .then(resp => {\n        resolve(resp.data.genre_list || []);\n      })\n      .catch(error => {\n        // message.error(error.message);\n        reject(error.message);\n      });\n  });\n\nconst columns = [\n  {\n    title: \"分类名称\",\n    dataIndex: \"name\",\n    key: \"name\"\n  },\n  {\n    title: \"操作\",\n    dataIndex: \"options\",\n    align: \"right\" as \"right\",\n    key: \"options\"\n  }\n];\n\nconst Genre: FC<IProps> = props => {\n  const { loading, value, error, retry } = useAsyncRetry<any>(apiGetList);\n\n  function handleAdd() {\n    Modal.open({\n      component: <AddModal />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  function handleUpdate(record: any) {\n    Modal.open({\n      // @ts-ignore\n      component: <AddModal id={record._id} />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  const handleDelete = async (record: any) => {\n    try {\n      await http.post(\n        API.All.genre.delete(record._id),\n        {},\n        {\n          useJson: true\n        }\n      );\n\n      message.success(\"删除成功\");\n      retry();\n    } catch (err) {\n      message.error(\"请先删除所有分类相关的书籍\");\n    }\n  };\n\n  function renderColumns() {\n    return columns.map(col => {\n      if (col.key === \"options\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Button type=\"link\" onClick={() => handleUpdate(record)}>\n                  更新\n                </Button>\n                <Button type=\"link\" onClick={() => handleDelete(record)}>\n                  删除\n                </Button>\n              </>\n            );\n          }\n        };\n      }\n\n      if (col.key === \"name\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Link to={`/genre/${record._id}`}>{text}</Link>\n              </>\n            );\n          }\n        };\n      }\n\n      return col;\n    });\n  }\n\n  return (\n    <div>\n      <h1> 分类列表 </h1>\n      <Row type=\"flex\" justify=\"end\">\n        <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n          添加分类\n        </Button>\n      </Row>\n      <Table bordered rowKey=\"_id\" columns={renderColumns()} dataSource={value} loading={loading} />\n    </div>\n  );\n};\n\nexport default Genre;\n","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions, Spin} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetGenre = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.genre.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst GenreDetail : FC < IProps > = props => {\n    const genreState = useAsync < any > (() => apiGetGenre(props.match.params.id));\n    const genreData = genreState.value\n        ? genreState.value.genre\n        : {};\n    const bookData = genreState.value\n        ? genreState.value.genre_books\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"分类详情\"/>\n\n            <Spin spinning={genreState.loading}>\n                <h1>\n                    分类名称：{genreData.name}\n                </h1>\n                {bookData && bookData.map((bookItem, bookIndex) => {\n                    return (\n                        <Card\n                            style={{\n                            marginTop: 20\n                        }}\n                            type=\"inner\"\n                            title={`图书：${bookIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"标题\">\n                                    <Link to={`/book/${bookItem._id}`}>{bookItem.title}</Link>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"简介\">{bookItem.summary}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n                {bookData.length === 0 && <div>暂无图书</div>}\n            </Spin>\n\n        </div>\n    )\n}\n\nexport default GenreDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport moment from 'moment';\nimport {\n    Spin,\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    Select,\n    DatePicker\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\nconst {Option} = Select;\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst statusOptions = [{\n    label: '可供借阅',\n    value: '可供借阅'\n},{\n    label: '已借出',\n    value: '已借出'\n},{\n    label: '馆藏维护',\n    value: '馆藏维护'\n}]\n\nconst apiGetBookList = () => {\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.list())\n            .then(resp => {\n                const bookOptions = resp.data.book_list.map((bookItem) => {\n                    return {\n                        label: bookItem.title,\n                        value: bookItem._id,\n                    }\n                })\n                resolve(bookOptions);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\nconst apiGetBookInstance = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.bookinstance.detail(id))\n            .then(resp => {\n                const result = {\n                    book: resp.data.bookinstance.book._id,\n                    imprint: resp.data.bookinstance.imprint,\n                    status: resp.data.bookinstance.status,\n                    due_back: moment(resp.data.bookinstance.due_back)\n                }\n                resolve(result);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\n\nconst BookInstanceModal = (props : IProps) => {\n    const cacheState = useAsync<any>(apiGetBookList);\n    const bookInstanceState = useAsync<any>(() => apiGetBookInstance(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props.form.setFieldsValue(bookInstanceState.value);\n    }, [!isSetForm.current, !!bookInstanceState.value])\n\n    const bookOptions = cacheState.value || [];\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async (err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.bookinstance.update(props.id), values, {\n                                useJson: true\n                            });\n    \n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.bookinstance.create(), values, {\n                                useJson: true\n                            });\n    \n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Spin spinning={cacheState.loading}>\n                <Form>\n                    <Form.Item label=\"图书名称\">\n                        {props\n                            .form\n                            .getFieldDecorator('book', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请选择图书名称'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择图书名称\">\n                                    {bookOptions.map((optionItem) => {\n                                        return (\n                                            <Option value={optionItem.value}>\n                                                {optionItem.label}\n                                            </Option>\n                                        )\n                                    })}   \n                                </Select>\n                            )}\n                    </Form.Item>\n                    <Form.Item label=\"出版信息\">\n                        {props\n                            .form\n                            .getFieldDecorator('imprint', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入出版信息'\n                                    }\n                                ]\n                            })(<Input/>)}\n                    </Form.Item>\n   \n                    <Form.Item label=\"图书可借日期\">\n                        {props\n                            .form\n                            .getFieldDecorator('due_back', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入图书可借日期'\n                                    }\n                                ]\n                            })(<DatePicker/>)}\n                    </Form.Item>\n\n\n                    <Form.Item label=\"借阅状态\">\n                        {props\n                            .form\n                            .getFieldDecorator('status', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入借阅状态'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择状态\">\n                                    {\n                                        statusOptions.map((optionItem) => {\n                                            return (\n                                                <Option key={optionItem.value} value={optionItem.value}>\n                                                    {optionItem.label}\n                                                </Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            )}\n                    </Form.Item>\n\n                    <Row type=\"flex\" justify=\"end\">\n                        <Col>\n                            <Button type=\"danger\" onClick={() => props.dismiss()}>\n                                取消\n                            </Button>\n                        </Col>\n                        <Col\n                            style={{\n                            marginLeft: '12px'\n                        }}>\n                            <Button type=\"primary\" onClick={handleSubmit}>\n                                确认\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'bookinstance'})(BookInstanceModal);","import React, { FC } from \"react\";\nimport { useAsyncRetry } from \"react-use\";\nimport { Button, message, Table, Row } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../../components/Modal\";\nimport moment from \"moment\";\nimport API from \"../../utils/API\";\nimport http from \"../../utils/http\";\nimport AddModal from \"./AddModal\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst apiGetList = () =>\n  new Promise((resolve, reject) => {\n    http\n      .get(API.All.bookinstance.list())\n      .then(resp => {\n        const instanceList = resp.data.bookinstance_list.map(bookinstanceItem => {\n          return {\n            ...bookinstanceItem,\n            dueBack: moment(bookinstanceItem.due_back).format(\"YYYY-MM-DD\"),\n            bookTitle: `${bookinstanceItem.book.title}：${bookinstanceItem.imprint}`\n          };\n        });\n\n        resolve(instanceList);\n      })\n      .catch(error => {\n        // message.error(error.message);\n        reject(error.message);\n      });\n  });\n\nconst columns = [\n  {\n    title: \"书籍名称\",\n    dataIndex: \"bookTitle\",\n    key: \"bookTitle\"\n  },\n  {\n    title: \"借阅状态\",\n    dataIndex: \"status\",\n    key: \"status\"\n  },\n  {\n    title: \"归还日期\",\n    dataIndex: \"dueBack\",\n    key: \"dueBack\"\n  },\n  {\n    title: \"操作\",\n    dataIndex: \"options\",\n    align: \"right\" as \"right\",\n    key: \"options\"\n  }\n];\n\nconst Bookinstance: FC<IProps> = props => {\n  const { loading, value, error, retry } = useAsyncRetry<any>(apiGetList);\n\n  function handleAdd() {\n    Modal.open({\n      component: <AddModal />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  function handleUpdate(record: any) {\n    Modal.open({\n      // @ts-ignore\n      component: <AddModal id={record._id} />,\n      width: 900,\n      maskClosable: false,\n      footer: null\n    }).result.then(() => {\n      retry();\n    });\n  }\n\n  const handleDelete = async (record: any) => {\n    try {\n      await http.post(\n        API.All.author.delete(record._id),\n        {},\n        {\n          useJson: true\n        }\n      );\n\n      message.success(\"删除成功\");\n      retry();\n    } catch (err) {\n      message.error(\"请先删除所有作者有关的书籍\");\n    }\n  };\n\n  function renderColumns() {\n    return columns.map(col => {\n      if (col.key === \"options\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Button type=\"link\" onClick={() => handleUpdate(record)}>\n                  更新\n                </Button>\n                <Button type=\"link\" onClick={() => handleDelete(record)}>\n                  删除\n                </Button>\n              </>\n            );\n          }\n        };\n      }\n\n      if (col.key === \"bookTitle\") {\n        return {\n          ...col,\n          render: (text, record) => {\n            return (\n              <>\n                <Link to={`/bookinstance/${record._id}`}>{text}</Link>\n              </>\n            );\n          }\n        };\n      }\n\n      return col;\n    });\n  }\n  return (\n    <div>\n      <h1> 实例列表 </h1>\n      <Row type=\"flex\" justify=\"end\">\n        <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n          添加实例\n        </Button>\n      </Row>\n      <Table bordered rowKey=\"_id\" columns={renderColumns()} dataSource={value} loading={loading} />\n    </div>\n  );\n};\n\nexport default Bookinstance;\n","import React from \"react\";\nimport Home from \"./modules/Home\";\nimport Login from \"./modules/Login\";\nimport Book from \"./modules/Book\";\nimport BookDetail from \"./modules/Book/Detail\";\nimport Author from \"./modules/Author\";\nimport AuthorDetail from \"./modules/Author/Detail\";\nimport Genre from \"./modules/Genre\";\nimport GenreDetail from \"./modules/Genre/Detail\";\nimport Bookinstance from \"./modules/Bookinstance\";\nimport BookinstanceDetail from \"./modules/Bookinstance/Detail\";\n\nexport interface IRouteCfgProps {\n  key: string;\n  title: string;\n  path: string;\n  exact?: boolean;\n  inMenu?: boolean;\n  hide?: boolean;\n  component: React.ComponentType<any>;\n}\n\nexport const routeCfg: IRouteCfgProps[] = [\n  {\n    key: \"home\",\n    title: \"首页\",\n    exact: true,\n    component: Home,\n    inMenu: true,\n    path: \"/\"\n  },\n  {\n    key: \"book\",\n    title: \"书籍\",\n    path: \"/book\",\n    exact: true,\n    component: Book,\n    inMenu: true\n  },\n  {\n    key: \"book-detail\",\n    title: \"书籍详情\",\n    path: \"/book/:id\",\n    component: BookDetail\n  },\n  {\n    key: \"author\",\n    title: \"作者\",\n    path: \"/author\",\n    exact: true,\n    component: Author,\n    inMenu: true\n  },\n  {\n    key: \"author-detail\",\n    title: \"作者详情\",\n    path: \"/author/:id\",\n    component: AuthorDetail\n  },\n  {\n    key: \"genre\",\n    title: \"分类\",\n    path: \"/genre\",\n    exact: true,\n    component: Genre,\n    inMenu: true\n  },\n  {\n    key: \"genre-detail\",\n    title: \"分类详情\",\n    path: \"/genre/:id\",\n    component: GenreDetail\n  },\n  {\n    key: \"bookinstance\",\n    title: \"书籍实例\",\n    path: \"/bookinstance\",\n    exact: true,\n    component: Bookinstance,\n    inMenu: true\n  },\n  {\n    key: \"bookinstance-detail\",\n    title: \"书籍实例详情\",\n    path: \"/bookinstance/:id\",\n    component: BookinstanceDetail\n  }\n];\n","import React, { FC } from \"react\";\nimport { PageHeader, message, Card, Descriptions } from \"antd\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { useAsync } from \"react-use\";\nimport API from \"../../utils/API\";\nimport http from \"../../utils/http\";\n\ninterface IProps extends RouteComponentProps<any> {\n  className?: string;\n}\n\nconst apiGetDateil = id => {\n  if (!id) {\n    return Promise.resolve(null);\n  }\n\n  return new Promise((resolve, reject) => {\n    http\n      .get(API.All.bookinstance.detail(id))\n      .then(resp => {\n        resolve(resp.data.bookinstance);\n      })\n      .catch(error => {\n        message.error(error.message);\n        reject(error.message);\n      });\n  });\n};\n\nconst BookInstanceDetail: FC<IProps> = props => {\n  const bookInstanceState = useAsync<any>(() => apiGetDateil(props.match.params.id));\n\n  // console.info(bookInstanceState.value);\n\n  return (\n    <div>\n      <PageHeader onBack={() => props.history.goBack()} title=\"实例详情\" />\n      <Card loading={bookInstanceState.loading}>\n        {bookInstanceState.value && (\n          <Descriptions column={1}>\n            <Descriptions.Item label=\"ID\">{bookInstanceState.value._id}</Descriptions.Item>\n            <Descriptions.Item label=\"标题\">\n              <Link to={`/book/${bookInstanceState.value.book._id}`}>{bookInstanceState.value.book.title}</Link>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"出版信息\">{bookInstanceState.value.imprint}</Descriptions.Item>\n            <Descriptions.Item label=\"状态\">{bookInstanceState.value.status}</Descriptions.Item>\n            <Descriptions.Item label=\"可借日期\">\n              {moment(bookInstanceState.value.due_back).format(\"YYYY-MM-DD\")}\n            </Descriptions.Item>\n          </Descriptions>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default BookInstanceDetail;\n","import React, { useEffect } from \"react\";\nimport { Layout, Menu, Dropdown, Avatar } from \"antd\";\nimport { Switch, Route, NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { routeCfg } from \"../../config\";\nimport { AuthContext } from \"../../store/Auth\";\n\nconst { Header, Footer } = Layout;\n\nconst App = (props: RouteComponentProps) => {\n  const { state, dispatch } = React.useContext(AuthContext);\n\n  const handleLogout = () => {\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  };\n\n  return (\n    <Header className=\"l-header\">\n      <Menu className=\"l-menu\" theme=\"dark\" mode=\"horizontal\" selectedKeys={[props.location.pathname]}>\n        {routeCfg\n          .filter(route => {\n            return route.inMenu;\n          })\n          .map(route => {\n            return (\n              <Menu.Item key={route.path}>\n                <NavLink to={route.path}>{route.title}</NavLink>\n              </Menu.Item>\n            );\n          })}\n\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item>\n                <a onClick={handleLogout}>登出</a>\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <a className=\"ant-dropdown-link\" href=\"#\">\n            <Avatar icon=\"user\" /> {state.user || \"admin\"}\n          </a>\n        </Dropdown>\n      </Menu>\n    </Header>\n  );\n};\n\nexport default withRouter(App);\n","import React, { useEffect, useReducer } from \"react\";\n\nimport { Layout, Menu } from \"antd\";\nimport { Switch, Route, NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport NotFound from \"./modules/NotFound\";\nimport Content from \"./components/Content\";\nimport Header from \"./components/Header\";\n\nimport { routeCfg } from \"./config\";\nimport \"./App.scss\";\n\nconst { Footer } = Layout;\n\nconst App = (props: RouteComponentProps) => {\n  useEffect(function() {\n    document.title = \"Express Locallibrary Tutorial Demo\";\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Header />\n        <Content routes={routeCfg}>\n          <Switch>\n            {routeCfg.map(route => {\n              return <Route exact={!!route.exact} component={route.component} path={route.path} />;\n            })}\n            <Route component={NotFound} />\n          </Switch>\n        </Content>\n        <Footer className=\"l-footer\">Express Locallibrary Tutorial Demo ©2019 Created by zhangbx</Footer>\n      </Layout>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","import React, { useReducer } from \"react\";\nimport Login from \"./modules/Login\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport App from \"./App\";\nimport { AuthContext, initialState, reducer } from \"./store/Auth\";\n\nconst Entry = props => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // not login\n  if (!state.token) {\n    return (\n      <AuthContext.Provider\n        value={{\n          state,\n          dispatch\n        }}\n      >\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Redirect to=\"/login\" />\n        </Switch>\n      </AuthContext.Provider>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        state,\n        dispatch\n      }}\n    >\n      <Route component={App} />\n    </AuthContext.Provider>\n  );\n};\n\nexport default Entry;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./_App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}