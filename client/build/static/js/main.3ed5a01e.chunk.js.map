{"version":3,"sources":["utils/API/apis sync nonrecursive //.[jt]sx?$","utils/API/apis/All.ts","modules/NotFound/index.tsx","components/Content/index.tsx","utils/API/index.ts","utils/http/index.ts","modules/Home/index.tsx","components/Modal/index.tsx","modules/Book/AddModal.tsx","modules/Book/index.tsx","modules/Book/Detail.tsx","modules/Author/AddModal.tsx","modules/Author/index.tsx","modules/Author/Detail.tsx","modules/Genre/AddModal.tsx","modules/Genre/index.tsx","modules/Genre/Detail.tsx","modules/Bookinstance/AddModal.tsx","modules/Bookinstance/index.tsx","config.tsx","modules/Bookinstance/Detail.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HOST","API","home","getList","book","create","delete","update","detail","list","author","genre","bookinstance","NotFound","props","Content","Layout","withRouter","nav","routes","find","route","location","pathname","path","isRightRoutes","navTitle","title","className","Item","to","children","isDev","process","apiCtx","require","reduce","file","basename","extname","config","host","createAPI","apis","result","key","args","index","replace","match","arg","undefined","enhanced","axios","dataSerializer","params","qs","stringify","arrayFormat","allowDots","interceptors","request","use","timeout","useJson","method","headers","transformRequest","response","data","success","apiGetList","Promise","reject","http","get","All","then","resp","catch","error","message","Home","useAsync","loading","value","spinning","book_count","book_instance_count","book_instance_available_count","author_count","genre_count","Modal","defaultSettings","destroyOnClose","footer","maskClosable","closable","open","destroyed","withResolve","withReject","settings","onOk","ev","close","dismiss","onCancel","div","document","createElement","destroy","unmountComponentAtNode","body","removeChild","render","reason","visible","callback","TheComponent","component","childProps","reactRender","afterClose","Children","child","cloneElement","appendChild","Option","Select","apiGetAuthors","options","author_list","authorItem","label","family_name","first_name","_id","apiGetGenres","genre_list","apiGetCache","all","apiGetBook","bookData","genreItem","Form","name","cacheState","bookState","isSetForm","useRef","useEffect","current","form","setFieldsValue","authorOptions","genreGroups","getFieldDecorator","rules","required","placeholder","optionItem","TextArea","Group","type","justify","onClick","style","marginLeft","validateFields","err","values","a","post","bookList","book_list","bookItem","authorName","columns","dataIndex","align","Book","useAsyncRetry","retry","handleDelete","record","AddModal","width","marginBottom","bordered","rowKey","col","text","handleUpdate","dataSource","BookDetail","instancesData","book_instances","onBack","history","goBack","column","summary","isbn","length","instanceItem","instanceIndex","marginTop","status","due_back","imprint","authorState","date_of_birth","moment","date_of_death","birth","format","death","Author","AuthorDetail","authorData","author_books","bookIndex","genreState","Genre","GenreDetail","genreData","genre_books","statusOptions","apiGetBookList","bookOptions","bookInstanceState","instanceList","bookinstance_list","bookinstanceItem","dueBack","bookTitle","routeCfg","exact","inMenu","console","info","Header","Footer","theme","mode","selectedKeys","filter","Boolean","window","hostname","ReactDOM","App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ed5a01e.chunk.js","sourcesContent":["var map = {\n\t\"./All.ts\": 284\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 283;","export const HOST = ['http://localhost:5001/api', 'http://api.jokingzhang.com/demo-library'];\n\nexport const API = {\n    home: {\n        getList: '/home',\n    },\n    book: {\n        create: '/book/create',\n        delete: '/book/:id/delete',\n        update: '/book/:id/update',\n        detail: '/book/:id',\n        list: '/books',\n    },\n    author: {\n        create: '/author/create',\n        delete: '/author/:id/delete',\n        update: '/author/:id/update',\n        detail: '/author/:id',\n        list: '/authors',\n    },\n    genre: {\n        create: '/genre/create',\n        delete: '/genre/:id/delete',\n        update: '/genre/:id/update',\n        detail: '/genre/:id',\n        list: '/genres',\n    },\n    bookinstance: {\n        create: '/bookinstance/create',\n        delete: '/bookinstance/:id/delete',\n        update: '/bookinstance/:id/update',\n        detail: '/bookinstance/:id',\n        list: '/bookinstances',\n    },\n};\n","import React, {FC} from 'react';\n\ninterface IProps {\n    className?: string;\n}\n\nconst NotFound: FC<IProps> = props => {\n    return (\n        <div>\n            NotFound\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport {NavLink, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {Layout, Breadcrumb} from 'antd';\nimport {IRouteCfgProps} from '../../config';\nimport './style.scss';\n\nconst {Content} = Layout\n\ninterface ILayoutContentProps extends RouteComponentProps {\n    children : React.ReactChild;\n    routes : IRouteCfgProps[];\n}\n\nconst LayoutContent = (props : ILayoutContentProps) => {\n\n    const nav = props\n        .routes\n        .find((route) => {\n            return props.location.pathname === route.path;\n        })\n    const isRightRoutes = !!nav;\n\n    const navTitle = nav ? nav.title : '';\n\n    return (\n        <Content className=\"c-content\">\n            {isRightRoutes && \n                (<Breadcrumb className=\"c-content-breadcrumb\">\n                    <Breadcrumb.Item>\n                        <NavLink to=\"/\">首页</NavLink>\n                    </Breadcrumb.Item>\n                    {props.location.pathname !== '/' && \n                        <Breadcrumb.Item>\n                            <NavLink to={props.location.pathname}>{navTitle}</NavLink>\n                        </Breadcrumb.Item>\n                    }\n                </Breadcrumb>)\n            }\n            {props.children}\n        </Content>\n    )\n}\n\nexport default withRouter(LayoutContent);","import path from 'path';\n\n// 导入接口定义\nimport { API as All } from './apis/All';\n\ntype API<T> = { [P in keyof T]: T[P] extends object ? API<T[P]> : (...args: Array<string | number>) => string };\n\ninterface IAPI {\n    // 这里需要传递接口结构声明\n    All: typeof All;\n}\n\nconst isDev = process.env.NODE_ENV === 'development';\n// @ts-ignore\nconst apiCtx = require.context('./apis', false, /\\.[jt]sx?$/);\n\nexport default apiCtx.keys().reduce((exports, file) => {\n    exports[path.basename(file, path.extname(file))] = enhanced(apiCtx(file));\n\n    return exports;\n}, {}) as API<\n    IAPI & {\n        [key: string]: any;\n    }\n>;\n\nfunction enhanced(config) {\n    const host = isDev ? config.HOST[0] : config.HOST[1];\n    const createAPI = apis =>\n        Object.keys(apis).reduce((result, key) => {\n            const pathname = apis[key];\n\n            result[key] =\n                typeof pathname === 'string'\n                    ? (...args) => {\n                          let index = 0;\n\n                          return (\n                              host +\n                              pathname.replace(/:[^/]+/gi, match => {\n                                  const arg = args[index++];\n\n                                  return arg === undefined ? match : arg;\n                              })\n                          );\n                      }\n                    : createAPI(pathname);\n\n            return result;\n        }, {});\n\n    return createAPI(config.API);\n}\n","// 文档查看：https://github.com/mzabriskie/axios\nimport axios, { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\n// import cookies from 'utils/cookie';\nimport qs from 'qs';\nimport { message as AntdMessage } from 'antd';\n// import * as constants from 'config/constant';\n\ndeclare module 'axios' {\n    // tslint:disable-next-line\n    interface AxiosRequestConfig {\n        useJson?: boolean;\n        noToken?: boolean;\n        verifytoken?: boolean;\n        // 默认支持token过期提醒，如果不需要该功能，则传false值\n        expiredWarning?: boolean;\n    }\n\n    // tslint:disable-next-line\n    interface AxiosResponse {\n        [key: string]: any;\n    }\n}\n\nexport default axios;\n\n\ntype ErrorCode = number | string;\ntype ErrorMsg = string;\ninterface IError extends Error {\n    error_code: ErrorCode;\n    error_msg: ErrorMsg;\n    response: AxiosResponse;\n}\n\ninterface IData {\n    error_msg?: ErrorMsg;\n    error_description?: ErrorMsg;\n    error_message?: ErrorMsg;\n    message?: ErrorMsg;\n    description?: ErrorMsg;\n    msg?: ErrorMsg;\n\n    error_code?: ErrorCode;\n    code?: ErrorCode;\n}\n\nconst ERROR_MSG = {\n    /* 网络类异常 */\n    OFF_LINE: '抱歉，您貌似还没连接到网络，请检查网络连接',\n    CANCEL: '抱歉，请求已取消',\n    200: '抱歉，请求失败',\n    401: '抱歉，您貌似还没有登录',\n    403: '抱歉，您没有权限访问该页面',\n    413: '抱歉，您上传文件太大',\n\n    404: '抱歉，您访问的接口地址貌似不存在',\n    500: '抱歉，当前服务器异常，请稍后再试',\n    503: '抱歉，当前服务器异常，请稍后再试'\n};\n\n\nexport function dataSerializer(params: object) {\n    return qs.stringify(params, {\n        arrayFormat: 'indices',\n        allowDots: true\n    });\n}\n\naxios.interceptors.request.use((config: AxiosRequestConfig) => {\n    if (!config.timeout) {\n        config.timeout = 60 * 1000;\n    }\n\n    \n    // 增加对表单数组提交的支持\n    if (!config.useJson && (config.method === 'post' || config.method === 'put')) {\n        config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        config.transformRequest = dataSerializer;\n    }\n\n    // // 请求添加token头\n    // if (!config.noToken) {\n    //     if (store.token) {\n    //         config.headers.Authorization = `Bearer ${store.token}`;\n    //     }\n    // }\n\n    return config;\n});\n\naxios.interceptors.response.use((response: AxiosResponse) => {\n    let data = response.data;\n\n    if (data && typeof data === 'object') {\n        if (data.success === 'true') {\n            return data;\n        }\n    }\n\n    return response;\n});\n\n","import React, {FC} from 'react';\nimport {useAsync} from 'react-use';\nimport {Spin, message} from 'antd';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.home.getList())\n        .then(resp => {\n            resolve(resp.data);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst Home: FC <IProps> = props => {\n    const {loading, value, error} = useAsync < any > (apiGetList);\n\n    return (\n        <div>\n            <h1>图书馆首页</h1>\n            <p>欢迎来到图书馆！</p>\n            <h2>动态信息</h2>\n            <Spin spinning={loading}>\n                {value && <ul>\n                    <li>\n                        <b>图书：</b>\n                        {value.book_count}\n                    </li>\n                    <li>\n                        <b>图书实例：</b>\n                        {value.book_instance_count}\n                    </li>\n                    <li>\n                        <b>可借阅图书实例：</b>\n                        {value.book_instance_available_count}\n                    </li>\n                    <li>\n                        <b>作者：</b>\n                        {value.author_count}\n                    </li>\n                    <li>\n                        <b>图书分类：</b>\n                        {value.genre_count}\n                    </li>\n                </ul>\n}\n            </Spin>\n        </div>\n    )\n}\n\nexport default Home;","/* tslint:disable */\nimport React, { Children, cloneElement } from 'react';\nimport { render as reactRender, unmountComponentAtNode } from 'react-dom';\nimport Modal, { ModalProps } from 'antd/lib/modal';\nimport './style.scss';\n\nexport default Modal as INewModal;\n\ntype INewModal = typeof Modal & {\n    open: (\n        config: IConfig\n    ) => IHandler & {\n        result: Promise<any>;\n    };\n};\n\ninterface IHandler {\n    close(data: any): void;\n    dismiss(reason: any): void;\n}\n\ninterface IConfig extends Omit<ModalProps, 'onOk' | 'onCancel'> {\n    onOk?(e: React.MouseEvent<any>, handler: IHandler): void;\n    onCancel?(e: React.MouseEvent<any>, handler: IHandler): void;\n    component?: React.ComponentType | React.ReactElement<any>;\n}\n\nconst defaultSettings = {\n    destroyOnClose: true,\n    footer: null,\n    maskClosable: false,\n    closable: false\n};\n\n/**\n * @desc 给antd的Modal扩展一个open方法，用来方便的创建更灵活的modal。\n *       默认的Modal组件依赖于组件声明式受控调用，非常麻烦，尤其是需要从组件内部关闭modal时，需要将关闭句柄向下传递；\n *       并且对于多modal场景下，使用也非常麻烦，需要定义多个状态值对应到不同的modal的visible状态！\n *\n *       新增的Modal.open方法，通过封装隐藏了visible控制，通过对外暴漏以及向下传递close、dismiss句柄以及promise，可以方便的用来从外部、组件内部关闭modal，\n *       并且可以方便的通过promise来处理modal关闭的回调！\n *\n * @usage Modal.open({ component: YourComponent / <YourComponent />, ...ModalProps  })\n *\n *        component参数支持传入组件定义，或者直接传入该组件调用的reactNode。\n *        无论哪种方式，Modal.open都会向其传递close、dismiss属性。\n *        在YourComponent组件内部，你可以方便的通过这两种方法来关闭modal。\n *\n *        close、dismiss两个方法都可以用来关闭modal，不同的是他们对于返回的promise的状态有影响：\n *        close => Promise.resolved\n *        dismiss => Promise.rejected\n *\n * @param {Object} config 配置参数，支持Modal的所有的props参数，另外新增扩展了component参数，具体使用参考上方说明!\n *\n * @return {Object} { close, dismiss, result: Promise }\n *          返回一个对象，包含了close、dismiss两个关闭方法，以及一个result的promise对象，可以通过该promise来访问modal关闭时的回调！\n */\nexport const open = ((Modal as INewModal).open = (props: IConfig = {}) => {\n    let destroyed : any;\n    let withResolve : any;\n    let withReject : any;\n\n    const settings = { ...defaultSettings, ...props };\n\n    if (settings.footer === true) {\n        delete settings.footer;\n    }\n\n    if (props.onOk) {\n        settings.onOk = ev => props.onOk!(ev, { close, dismiss });\n    }\n\n    if (props.onCancel) {\n        settings.onCancel = ev => props.onCancel!(ev, { close, dismiss });\n    }\n\n    const div = document.createElement('div');\n\n    document.body.appendChild(div);\n\n    function destroy() {\n        if (!destroyed) {\n            destroyed = true;\n\n            unmountComponentAtNode(div);\n\n            document.body.removeChild(div);\n        }\n    }\n\n    function close(data : any) {\n        render(false, () => withResolve(data));\n    }\n\n    function dismiss(reason : any) {\n        render(false, () => withReject(reason));\n    }\n\n    function render(visible : boolean, callback?: () => void) {\n        const { component: TheComponent, ...props } = settings;\n        const childProps = {\n            close,\n            dismiss\n        };\n\n        let children;\n\n        if (typeof TheComponent === 'function') {\n            children = <TheComponent />;\n        } else {\n            children = TheComponent;\n        }\n\n        reactRender(\n            // @ts-ignore\n            <Modal\n                // @ts-ignore\n                onCancel={dismiss}\n                // @ts-ignore\n                onOk={close}\n                {...props}\n                visible={visible}\n                afterClose={() => {\n                    if (!callback) {\n                        callback = withReject;\n                    }\n\n                    callback!();\n                    destroy();\n                }}>\n                {Children.map(children, child => cloneElement(child as React.ReactElement<any>, childProps))}\n            </Modal>,\n            div\n        );\n    }\n\n    render(true);\n\n    return {\n        close,\n        dismiss,\n        result: new Promise((resolve, reject) => {\n            withResolve = resolve;\n            withReject = reject;\n        })\n    };\n});\n","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport {\n    Spin,\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    Select,\n    Checkbox\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\nconst {Option} = Select;\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetAuthors = new Promise((resolve, reject) => {\n    http\n        .get(API.All.author.list())\n        .then(resp => {\n\n            const options = resp.data.author_list\n                ? resp\n                    .data\n                    .author_list\n                    .map((authorItem) => {\n                        return {label: `${authorItem.family_name}，${authorItem.first_name}`, value: authorItem._id}\n                    })\n                : [];\n\n            resolve(options);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n})\n\nconst apiGetGenres = new Promise((resolve, reject) => {\n    http\n        .get(API.All.genre.list())\n        .then(resp => {\n            resolve(resp.data.genre_list || []);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n})\n\nconst apiGetCache = () => Promise.all([apiGetAuthors, apiGetGenres]);\n\nconst apiGetBook = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.detail(id))\n            .then(resp => {\n                const bookData = {\n                    ...resp.data.book,\n                    author: resp.data.book.author._id,\n                    genre: resp.data.book.genre.map((genreItem) => {\n                        return genreItem._id\n                    })\n                }\n                resolve(bookData);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\nconst BookModal = (props : IProps) => {\n    const cacheState = useAsync<any>(apiGetCache);\n    const bookState = useAsync<any>(() => apiGetBook(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props.form.setFieldsValue(bookState.value);\n    }, [!isSetForm.current, !!bookState.value])\n\n    const authorOptions = cacheState.value\n        ? cacheState.value[0]\n        : [];\n    const genreGroups = cacheState.value\n        ? cacheState.value[1]\n        : [];\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async (err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.book.update(props.id), values, {\n                                useJson: true\n                            });\n    \n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.book.create(), values, {\n                                useJson: true\n                            });\n    \n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Spin spinning={cacheState.loading}>\n                <Form>\n                    <Form.Item label=\"标题\">\n                        {props\n                            .form\n                            .getFieldDecorator('title', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入标题'\n                                    }\n                                ]\n                            })(<Input/>)}\n                    </Form.Item>\n                    <Form.Item label=\"作者\">\n                        {props\n                            .form\n                            .getFieldDecorator('author', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请选择作者'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择作者\">\n                                    {authorOptions.map((optionItem) => {\n                                        return (\n                                            <Option value={optionItem.value}>\n                                                {optionItem.label}\n                                            </Option>\n                                        )\n                                    })\n}\n                                </Select>\n                            )}\n                    </Form.Item>\n                    <Form.Item label=\"简介\">\n                        {props\n                            .form\n                            .getFieldDecorator('summary', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入简介'\n                                    }\n                                ]\n                            })(<Input.TextArea/>)}\n                    </Form.Item>\n                    <Form.Item label=\"ISBN\">\n                        {props\n                            .form\n                            .getFieldDecorator('isbn', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入ISBN'\n                                    }\n                                ]\n                            })(<Input/>)}\n                    </Form.Item>\n                    <Form.Item label=\"分类\">\n                        {props\n                            .form\n                            .getFieldDecorator('genre', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入分类'\n                                    }\n                                ]\n                            })(\n                                <Checkbox.Group>\n                                    {genreGroups.map((genreItem) => {\n                                        return (\n                                            <Checkbox value={genreItem._id}>\n                                                {genreItem.name}\n                                            </Checkbox>\n                                        )\n                                    })\n}\n                                </Checkbox.Group>\n                            )}\n                    </Form.Item>\n                    <Row type=\"flex\" justify=\"end\">\n                        <Col>\n                            <Button type=\"danger\" onClick={() => props.dismiss()}>\n                                取消\n                            </Button>\n                        </Col>\n                        <Col\n                            style={{\n                            marginLeft: '12px'\n                        }}>\n                            <Button type=\"primary\" onClick={handleSubmit}>\n                                确认\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'book'})(BookModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.book.list())\n        .then(resp => {\n\n            const bookList = resp.data.book_list && resp.data.book_list.map((bookItem) => {\n                return {\n                    ...bookItem,\n                    authorName: `${bookItem.author.family_name}，${bookItem.author.first_name}`\n                }\n            })\n\n            resolve(bookList);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '书名',\n    dataIndex: 'title',\n    key: 'title'\n},{\n    title: '作者',\n    dataIndex: 'authorName',\n    key: 'authorName'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Book: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.book.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有图书实例');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'title') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/book/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n\n    return (\n        <div>\n            <h1> 图书列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加图书\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Book;","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetBook = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst BookDetail : FC < IProps > = props => {\n\n    const bookState = useAsync < any > (() => apiGetBook(props.match.params.id));\n\n    const bookData = bookState.value\n        ? bookState.value.book\n        : null;\n    const instancesData = bookState.value\n        ? bookState.value.book_instances\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"图书详情\"/>\n            <Card loading={bookState.loading}>\n                {bookData && <Descriptions column={1} title={bookData.title}>\n                    <Descriptions.Item label=\"作者\">{`${bookData.author.family_name}，${bookData.author.first_name}`}</Descriptions.Item>\n                    <Descriptions.Item label=\"简介\">{bookData.summary}</Descriptions.Item>\n                    <Descriptions.Item label=\"ISBN\">{bookData.isbn}</Descriptions.Item>\n                    <Descriptions.Item label=\"分类\">\n                        {bookData.genre && bookData\n                            .genre\n                            .map((genreItem) => {\n                                return <Link to={`/genre/${genreItem._id}`}>{genreItem.name}</Link>\n                            })\n                        }\n                    </Descriptions.Item>\n                </Descriptions>}\n\n                {instancesData.length > 0 && <hr />}\n\n                {instancesData && instancesData.map((instanceItem, instanceIndex) => {\n                    return (\n                        <Card style={{\n                            marginTop: 20\n                        }} type=\"inner\" title={`实例：${instanceIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"状态\">{instanceItem.status}</Descriptions.Item>\n                                <Descriptions.Item label=\"归还日期\">{instanceItem.due_back}</Descriptions.Item>\n                                <Descriptions.Item label=\"出版信息\">{instanceItem.imprint}</Descriptions.Item>\n                                <Descriptions.Item label=\"ID\"><Link to={`/bookinstance/${instanceItem._id}`}> {instanceItem._id} </Link></Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n\n            </Card>\n        </div>\n    )\n}\n\nexport default BookDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport moment from 'moment';\nimport {\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    DatePicker\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetAuthor = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.author.detail(id))\n            .then(resp => {\n                resolve({\n                    first_name: resp.data.author.first_name,\n                    family_name: resp.data.author.family_name,\n                    date_of_birth: moment(resp.data.author.date_of_birth),\n                    date_of_death: moment(resp.data.author.date_of_death),\n                });\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst AuthorModal = (props : IProps) => {\n    const authorState = useAsync < any > (() => apiGetAuthor(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props\n            .form\n            .setFieldsValue(authorState.value);\n    }, [\n        !isSetForm.current,\n        !!authorState.value\n    ])\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async(err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.author.update(props.id), values, {useJson: true});\n\n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.author.create(), values, {useJson: true});\n\n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Form>\n                <Form.Item label=\"姓的拼音\">\n                    {props\n                        .form\n                        .getFieldDecorator('first_name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入姓的拼音'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"姓的拼音\">\n                    {props\n                        .form\n                        .getFieldDecorator('family_name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入姓的拼音'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Form.Item label=\"出生日期\">\n                    {props\n                        .form\n                        .getFieldDecorator('date_of_birth', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入出生日期'\n                                }\n                            ]\n                        })(<DatePicker/>)}\n                </Form.Item>\n                <Form.Item label=\"死亡日期\">\n                    {props\n                        .form\n                        .getFieldDecorator('date_of_death', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入死亡日期'\n                                }\n                            ]\n                        })(<DatePicker/>)}\n                </Form.Item>\n                <Row type=\"flex\" justify=\"end\">\n                    <Col>\n                        <Button type=\"danger\" onClick={() => props.dismiss()}>\n                            取消\n                        </Button>\n                    </Col>\n                    <Col style={{\n                        marginLeft: '12px'\n                    }}>\n                        <Button type=\"primary\" onClick={handleSubmit}>\n                            确认\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'author'})(AuthorModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport moment from 'moment';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.author.list())\n        .then(resp => {\n\n            const bookList = resp.data.author_list && resp.data.author_list.map((authorItem) => {\n                return {\n                    ...authorItem,\n                    authorName: `${authorItem.family_name}，${authorItem.first_name}`,\n                    birth: moment(authorItem.date_of_birth).format('YYYY-MM-DD'),\n                    death: moment(authorItem.date_of_death).format('YYYY-MM-DD'),\n                }\n            })\n\n            resolve(bookList);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '作者名称',\n    dataIndex: 'authorName',\n    key: 'authorName'\n},{\n    title: '出生日期',\n    dataIndex: 'birth',\n    key: 'birth'\n},{\n    title: '死亡日期',\n    dataIndex: 'death',\n    key: 'death'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Author: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.author.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有作者有关的书籍');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'authorName') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/author/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n\n    return (\n        <div>\n            <h1> 作者列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加作者\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Author;","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport moment from 'moment';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetAuthor = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.author.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst AuthorDetail : FC < IProps > = props => {\n    const authorState = useAsync < any > (() => apiGetAuthor(props.match.params.id));\n\n    const authorData = authorState.value\n        ? authorState.value.author\n        : null;\n    const bookData = authorState.value\n        ? authorState.value.author_books\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"作者详情\"/>\n            <Card loading={authorState.loading}>\n                {authorData && <Descriptions column={1} title={bookData.title}>\n                    <Descriptions.Item label=\"姓名\">{`${authorData.family_name}，${authorData.first_name}`}</Descriptions.Item>\n                    <Descriptions.Item label=\"出生日期\">{moment(authorData.date_of_birth).format('YYYY-MM-DD')}</Descriptions.Item>\n                    <Descriptions.Item label=\"死亡日期\">{moment(authorData.date_of_death).format('YYYY-MM-DD')}</Descriptions.Item>\n                </Descriptions>}\n\n                <hr/> \n                \n                {bookData && bookData.map((bookItem, bookIndex) => {\n                    return (\n                        <Card\n                            style={{\n                            marginTop: 20\n                        }}\n                            type=\"inner\"\n                            title={`图书：${bookIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"标题\">\n                                    <Link to={`/book/${bookItem._id}`}>{bookItem.title}</Link>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"简介\">{bookItem.summary}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n                {bookData.length === 0 && <div>暂无图书</div>}\n\n            </Card>\n        </div>\n    )\n}\n\nexport default AuthorDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport {\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst apiGetGenre = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.genre.detail(id))\n            .then(resp => {\n                resolve({\n                    name: resp.data.genre.name\n                });\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst GenreModal = (props : IProps) => {\n    const genreState = useAsync < any > (() => apiGetGenre(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props\n            .form\n            .setFieldsValue(genreState.value);\n    }, [\n        !isSetForm.current,\n        !!genreState.value\n    ])\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async(err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.genre.update(props.id), values, {useJson: true});\n\n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.genre.create(), values, {useJson: true});\n\n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Form>\n                <Form.Item label=\"分类名称\">\n                    {props\n                        .form\n                        .getFieldDecorator('name', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入分类名称'\n                                }\n                            ]\n                        })(<Input/>)}\n                </Form.Item>\n                <Row type=\"flex\" justify=\"end\">\n                    <Col>\n                        <Button type=\"danger\" onClick={() => props.dismiss()}>\n                            取消\n                        </Button>\n                    </Col>\n                    <Col style={{\n                        marginLeft: '12px'\n                    }}>\n                        <Button type=\"primary\" onClick={handleSubmit}>\n                            确认\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'genre'})(GenreModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.genre.list())\n        .then(resp => {\n            resolve(resp.data.genre_list || []);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '分类名称',\n    dataIndex: 'name',\n    key: 'name'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Genre: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.genre.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有分类相关的书籍');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'name') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/genre/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n\n    return (\n        <div>\n            <h1> 分类列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加分类\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Genre;","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions, Spin} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetGenre = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.genre.detail(id))\n            .then(resp => {\n                resolve(resp.data);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst GenreDetail : FC < IProps > = props => {\n    const genreState = useAsync < any > (() => apiGetGenre(props.match.params.id));\n    const genreData = genreState.value\n        ? genreState.value.genre\n        : {};\n    const bookData = genreState.value\n        ? genreState.value.genre_books\n        : [];\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"分类详情\"/>\n\n            <Spin spinning={genreState.loading}>\n                <h1>\n                    分类名称：{genreData.name}\n                </h1>\n                {bookData && bookData.map((bookItem, bookIndex) => {\n                    return (\n                        <Card\n                            style={{\n                            marginTop: 20\n                        }}\n                            type=\"inner\"\n                            title={`图书：${bookIndex + 1}`}>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"标题\">\n                                    <Link to={`/book/${bookItem._id}`}>{bookItem.title}</Link>\n                                </Descriptions.Item>\n                                <Descriptions.Item label=\"简介\">{bookItem.summary}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    )\n                })}\n                {bookData.length === 0 && <div>暂无图书</div>}\n            </Spin>\n\n        </div>\n    )\n}\n\nexport default GenreDetail;","import React, {useRef, useEffect} from 'react';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport moment from 'moment';\nimport {\n    Spin,\n    Row,\n    Col,\n    Button,\n    Form,\n    message,\n    Input,\n    Select,\n    DatePicker\n} from 'antd';\nimport {FormComponentProps} from 'antd/lib/form';\n\nconst {Option} = Select;\n\ninterface IProps extends FormComponentProps {\n    id?: number;\n    close?: any;\n    dismiss?: any;\n}\n\nconst statusOptions = [{\n    label: '可供借阅',\n    value: '可供借阅'\n},{\n    label: '已借出',\n    value: '已借出'\n},{\n    label: '馆藏维护',\n    value: '馆藏维护'\n}]\n\nconst apiGetBookList = () => {\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.book.list())\n            .then(resp => {\n                const bookOptions = resp.data.book_list.map((bookItem) => {\n                    return {\n                        label: bookItem.title,\n                        value: bookItem._id,\n                    }\n                })\n                resolve(bookOptions);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\nconst apiGetBookInstance = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.bookinstance.detail(id))\n            .then(resp => {\n                const result = {\n                    book: resp.data.bookinstance.book._id,\n                    imprint: resp.data.bookinstance.imprint,\n                    status: resp.data.bookinstance.status,\n                    due_back: moment(resp.data.bookinstance.due_back)\n                }\n                resolve(result);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })    \n}\n\n\nconst BookInstanceModal = (props : IProps) => {\n    const cacheState = useAsync<any>(apiGetBookList);\n    const bookInstanceState = useAsync<any>(() => apiGetBookInstance(props.id));\n    const isSetForm = useRef(false);\n\n    useEffect(() => {\n        isSetForm.current = true;\n        props.form.setFieldsValue(bookInstanceState.value);\n    }, [!isSetForm.current, !!bookInstanceState.value])\n\n    const bookOptions = cacheState.value || [];\n\n    const handleSubmit = () => {\n        props\n            .form\n            .validateFields(async (err, values) => {\n                if (!err) {\n                    try {\n                        if (props.id) {\n                            await http.post(API.All.bookinstance.update(props.id), values, {\n                                useJson: true\n                            });\n    \n                            message.success('修改成功');\n                        } else {\n                            await http.post(API.All.bookinstance.create(), values, {\n                                useJson: true\n                            });\n    \n                            message.success('添加成功');\n                        }\n                        props.close();\n                    } catch (err) {\n                        message.error(err.message);\n                    }\n                }\n            });\n    }\n\n    return (\n        <div>\n            <Spin spinning={cacheState.loading}>\n                <Form>\n                    <Form.Item label=\"图书名称\">\n                        {props\n                            .form\n                            .getFieldDecorator('book', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请选择图书名称'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择图书名称\">\n                                    {bookOptions.map((optionItem) => {\n                                        return (\n                                            <Option value={optionItem.value}>\n                                                {optionItem.label}\n                                            </Option>\n                                        )\n                                    })}   \n                                </Select>\n                            )}\n                    </Form.Item>\n                    <Form.Item label=\"出版信息\">\n                        {props\n                            .form\n                            .getFieldDecorator('imprint', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入出版信息'\n                                    }\n                                ]\n                            })(<Input/>)}\n                    </Form.Item>\n   \n                    <Form.Item label=\"图书可借日期\">\n                        {props\n                            .form\n                            .getFieldDecorator('due_back', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入图书可借日期'\n                                    }\n                                ]\n                            })(<DatePicker/>)}\n                    </Form.Item>\n\n\n                    <Form.Item label=\"借阅状态\">\n                        {props\n                            .form\n                            .getFieldDecorator('status', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '请输入借阅状态'\n                                    }\n                                ]\n                            })(\n                                <Select placeholder=\"请选择状态\">\n                                    {\n                                        statusOptions.map((optionItem) => {\n                                            return (\n                                                <Option key={optionItem.value} value={optionItem.value}>\n                                                    {optionItem.label}\n                                                </Option>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            )}\n                    </Form.Item>\n\n                    <Row type=\"flex\" justify=\"end\">\n                        <Col>\n                            <Button type=\"danger\" onClick={() => props.dismiss()}>\n                                取消\n                            </Button>\n                        </Col>\n                        <Col\n                            style={{\n                            marginLeft: '12px'\n                        }}>\n                            <Button type=\"primary\" onClick={handleSubmit}>\n                                确认\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </div>\n    );\n\n}\n\nexport default Form.create({name: 'bookinstance'})(BookInstanceModal);","import React, {FC} from 'react';\nimport {useAsyncRetry} from 'react-use';\nimport {Button, message, Table, Row} from 'antd';\nimport {Link} from 'react-router-dom';\nimport Modal from '../../components/Modal';\nimport moment from 'moment';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\nimport AddModal from './AddModal';\n\ninterface IProps {\n    className?: string;\n}\n\nconst apiGetList = () => new Promise((resolve, reject) => {\n    http\n        .get(API.All.bookinstance.list())\n        .then(resp => {\n\n            const instanceList = resp.data.bookinstance_list.map((bookinstanceItem) => {\n                return {\n                    ...bookinstanceItem,\n                    dueBack: moment(bookinstanceItem.due_back).format('YYYY-MM-DD'),\n                    bookTitle: `${bookinstanceItem.book.title}：${bookinstanceItem.imprint}`\n                }\n            })\n\n            resolve(instanceList);\n        })\n        .catch(error => {\n            message.error(error.message);\n            reject(error.message);\n        });\n});\n\nconst columns = [{\n    title: '书籍名称',\n    dataIndex: 'bookTitle',\n    key: 'bookTitle'\n},{\n    title: '借阅状态',\n    dataIndex: 'status',\n    key: 'status'\n},{\n    title: '归还日期',\n    dataIndex: 'dueBack',\n    key: 'dueBack'\n},{\n    title: '操作',\n    dataIndex: 'options',\n    align: 'right' as 'right',\n    key: 'options'\n}]\n\nconst Bookinstance: FC<IProps> = props => {\n    const {loading, value, error, retry} = useAsyncRetry<any>(apiGetList);\n\n    function handleAdd() {\n        Modal.open({\n            component: <AddModal />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n\n    function handleUpdate(record: any) {\n        Modal.open({\n            // @ts-ignore\n            component: <AddModal id={record._id} />,\n            width: 900,\n            maskClosable: false,\n            footer: null\n        }).result.then(() => {\n            retry();\n        })\n    }\n    \n    const handleDelete = async (record: any) => {\n        try {\n            await http.post(API.All.author.delete(record._id), {}, {\n                useJson: true\n            });\n\n            message.success('删除成功');\n            retry();\n        } catch (err) {\n            message.error('请先删除所有作者有关的书籍');\n        }\n    }\n\n    function renderColumns() {\n        return columns.map((col) => {\n            if (col.key === 'options') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Button type=\"link\" onClick={() => handleUpdate(record)}>更新</Button>\n                                <Button type=\"link\" onClick={() => handleDelete(record)}>删除</Button>\n                            </>\n                        )\n                    }\n                };\n            }\n\n            if (col.key === 'bookTitle') {\n                return {\n                    ...col,\n                    render: (text, record) => {\n                        return (\n                            <>\n                                <Link to={`/bookinstance/${record._id}`}>{text}</Link>\n                            </>\n                        )\n                    }\n                }\n            }\n\n            return col;\n        })\n    }\n    return (\n        <div>\n            <h1> 实例列表 </h1>\n            <Row type=\"flex\" justify=\"end\">\n                <Button onClick={handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\n                    添加实例\n                </Button>\n            </Row>\n            <Table\n                bordered\n                rowKey=\"_id\"\n                columns={renderColumns()}\n                dataSource={value}\n                loading={loading}\n            />\n        </div>\n    )\n}\n\nexport default Bookinstance;","\nimport React from 'react';\nimport Home from './modules/Home';\nimport Book from './modules/Book';\nimport BookDetail from './modules/Book/Detail';\nimport Author from './modules/Author';\nimport AuthorDetail from './modules/Author/Detail';\nimport Genre from './modules/Genre';\nimport GenreDetail from './modules/Genre/Detail';\nimport Bookinstance from './modules/Bookinstance';\nimport BookinstanceDetail from './modules/Bookinstance/Detail';\n\nexport interface IRouteCfgProps {\n    key: string;\n    title: string;\n    path: string;\n    exact?: boolean;\n    inMenu?: boolean;\n    component: React.ComponentType<any>;\n}\n\nexport const routeCfg: IRouteCfgProps[] = [{\n    key: 'home',\n    title: '首页',\n    exact: true,\n    component: Home,\n    inMenu: true,\n    path: '/',\n},{\n    key: 'book',\n    title: '书籍',\n    path: '/book',\n    exact: true,\n    component: Book,\n    inMenu: true,\n},{\n    key: 'book-detail',\n    title: '书籍详情',\n    path: '/book/:id',\n    component: BookDetail,\n},{\n    key: 'author',\n    title: '作者',\n    path: '/author',\n    exact: true,\n    component: Author,\n    inMenu: true,\n},{\n    key: 'author-detail',\n    title: '作者详情',\n    path: '/author/:id',\n    component: AuthorDetail,\n},{\n    key: 'genre',\n    title: '分类',\n    path: '/genre',\n    exact: true,\n    component: Genre,\n    inMenu: true,\n},{\n    key: 'genre-detail',\n    title: '分类详情',\n    path: '/genre/:id',\n    component: GenreDetail,\n},{\n    key: 'bookinstance',\n    title: '书籍实例',\n    path: '/bookinstance',\n    exact: true,\n    component: Bookinstance,\n    inMenu: true,\n},{\n    key: 'bookinstance-detail',\n    title: '书籍实例详情',\n    path: '/bookinstance/:id',\n    component: BookinstanceDetail,\n}]","import React, {FC} from 'react';\nimport {PageHeader, message, Card, Descriptions} from 'antd';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport moment from 'moment';\nimport {useAsync} from 'react-use';\nimport API from '../../utils/API';\nimport http from '../../utils/http';\n\ninterface IProps extends RouteComponentProps < any > {\n    className?: string;\n}\n\nconst apiGetDateil = (id) => {\n    if (!id) {\n        return Promise.resolve(null)\n    }\n\n    return new Promise((resolve, reject) => {\n        http\n            .get(API.All.bookinstance.detail(id))\n            .then(resp => {\n                resolve(resp.data.bookinstance);\n            })\n            .catch(error => {\n                message.error(error.message);\n                reject(error.message);\n            })\n    })\n}\n\nconst BookInstanceDetail : FC < IProps > = props => {\n    const bookInstanceState = useAsync < any > (() => apiGetDateil(props.match.params.id));\n\n    console.info(bookInstanceState.value);\n\n    return (\n        <div>\n            <PageHeader onBack={() => props.history.goBack()} title=\"实例详情\"/>\n            <Card loading={bookInstanceState.loading}>\n                {bookInstanceState.value &&\n                    <Descriptions column={1}>\n                        <Descriptions.Item label=\"ID\">{bookInstanceState.value._id}</Descriptions.Item>\n                        <Descriptions.Item label=\"标题\">\n                            <Link to={`/book/${bookInstanceState.value.book._id}`}>\n                                {bookInstanceState.value.book.title}\n                            </Link>\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"出版信息\">{bookInstanceState.value.imprint}</Descriptions.Item>\n                        <Descriptions.Item label=\"状态\">{bookInstanceState.value.status}</Descriptions.Item>\n                        <Descriptions.Item label=\"可借日期\">{moment(bookInstanceState.value.due_back).format('YYYY-MM-DD')}</Descriptions.Item>\n                    </Descriptions>\n                }\n            </Card>\n        </div>\n    )\n}\n\nexport default BookInstanceDetail;","import React, {useEffect} from 'react';\nimport {Layout, Menu} from 'antd';\nimport {Switch, Route, NavLink, withRouter, RouteComponentProps} from 'react-router-dom';\nimport NotFound from './modules/NotFound';\nimport Content from './components/Content'\nimport {routeCfg} from './config';\nimport './App.scss';\n\nconst {Header, Footer} = Layout;\n\nconst App = (props: RouteComponentProps) => {\n\n    useEffect(function () {\n        document.title = 'Express Locallibrary Tutorial Demo';\n    }, [])\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Header className=\"l-header\">\n                    <Menu\n                        className=\"l-menu\"\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        selectedKeys={[props.location.pathname]}>\n                        {routeCfg.filter((route) => {\n                            return route.inMenu;\n                        }).map((route) => {\n                            return (\n                                <Menu.Item key={route.path}>\n                                    <NavLink to={route.path}>\n                                        {route.title}\n                                    </NavLink>\n                                </Menu.Item>\n                            )\n                        })}\n                    </Menu>\n                </Header>\n                <Content routes={routeCfg}>\n                  <Switch>\n                      {routeCfg.map((route) => {\n                        return (\n                          <Route exact={!!route.exact} component={route.component} path={route.path}/>\n                          )\n                        })}\n                      <Route component={NotFound}/>\n                  </Switch>\n                </Content>\n                <Footer className=\"l-footer\">\n                    Express Locallibrary Tutorial Demo ©2019 Created by zhangbx\n                </Footer>\n            </Layout>\n        </div>\n    );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n    <BrowserRouter>\n        <Route component={App} />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}